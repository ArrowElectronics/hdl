// video_sys.v

// Generated using ACDS version 23.4 79

`timescale 1 ps / 1 ps
module video_sys (
		output wire        hdmi_h_clk,                       //               hdmi.h_clk
		output wire        hdmi_h16_hsync,                   //                   .h16_hsync
		output wire        hdmi_h16_vsync,                   //                   .h16_vsync
		output wire        hdmi_h16_data_e,                  //                   .h16_data_e
		output wire [15:0] hdmi_h16_data,                    //                   .h16_data
		output wire [15:0] hdmi_h16_es_data,                 //                   .h16_es_data
		output wire        hdmi_h24_hsync,                   //                   .h24_hsync
		output wire        hdmi_h24_vsync,                   //                   .h24_vsync
		output wire        hdmi_h24_data_e,                  //                   .h24_data_e
		output wire [23:0] hdmi_h24_data,                    //                   .h24_data
		output wire        hdmi_h36_hsync,                   //                   .h36_hsync
		output wire        hdmi_h36_vsync,                   //                   .h36_vsync
		output wire        hdmi_h36_data_e,                  //                   .h36_data_e
		output wire [35:0] hdmi_h36_data,                    //                   .h36_data
		input  wire        clk_clk,                          //                clk.clk
		output wire        hdmi_dmac_irq,                    //          hdmi_dmac.irq
		output wire        hdmi_dmac_master_awvalid,         //   hdmi_dmac_master.awvalid
		output wire [31:0] hdmi_dmac_master_awaddr,          //                   .awaddr
		input  wire        hdmi_dmac_master_awready,         //                   .awready
		output wire        hdmi_dmac_master_wvalid,          //                   .wvalid
		output wire [63:0] hdmi_dmac_master_wdata,           //                   .wdata
		output wire [7:0]  hdmi_dmac_master_wstrb,           //                   .wstrb
		input  wire        hdmi_dmac_master_wready,          //                   .wready
		input  wire        hdmi_dmac_master_bvalid,          //                   .bvalid
		input  wire [1:0]  hdmi_dmac_master_bresp,           //                   .bresp
		output wire        hdmi_dmac_master_bready,          //                   .bready
		output wire        hdmi_dmac_master_arvalid,         //                   .arvalid
		output wire [31:0] hdmi_dmac_master_araddr,          //                   .araddr
		input  wire        hdmi_dmac_master_arready,         //                   .arready
		input  wire        hdmi_dmac_master_rvalid,          //                   .rvalid
		input  wire [1:0]  hdmi_dmac_master_rresp,           //                   .rresp
		input  wire [63:0] hdmi_dmac_master_rdata,           //                   .rdata
		output wire        hdmi_dmac_master_rready,          //                   .rready
		output wire [3:0]  hdmi_dmac_master_awlen,           //                   .awlen
		output wire [2:0]  hdmi_dmac_master_awsize,          //                   .awsize
		output wire [1:0]  hdmi_dmac_master_awburst,         //                   .awburst
		output wire [3:0]  hdmi_dmac_master_awcache,         //                   .awcache
		output wire [2:0]  hdmi_dmac_master_awprot,          //                   .awprot
		output wire        hdmi_dmac_master_wlast,           //                   .wlast
		output wire [3:0]  hdmi_dmac_master_arlen,           //                   .arlen
		output wire [2:0]  hdmi_dmac_master_arsize,          //                   .arsize
		output wire [1:0]  hdmi_dmac_master_arburst,         //                   .arburst
		output wire [3:0]  hdmi_dmac_master_arcache,         //                   .arcache
		output wire [2:0]  hdmi_dmac_master_arprot,          //                   .arprot
		output wire        hdmi_dmac_master_awid,            //                   .awid
		output wire [1:0]  hdmi_dmac_master_awlock,          //                   .awlock
		output wire        hdmi_dmac_master_wid,             //                   .wid
		output wire        hdmi_dmac_master_arid,            //                   .arid
		output wire [1:0]  hdmi_dmac_master_arlock,          //                   .arlock
		input  wire        hdmi_dmac_master_rid,             //                   .rid
		input  wire        hdmi_dmac_master_bid,             //                   .bid
		input  wire        hdmi_dmac_master_rlast,           //                   .rlast
		input  wire        hdmi_pll_refclk_clk,              //    hdmi_pll_refclk.clk
		output wire        mm_video_bridge_s0_waitrequest,   // mm_video_bridge_s0.waitrequest
		output wire [31:0] mm_video_bridge_s0_readdata,      //                   .readdata
		output wire        mm_video_bridge_s0_readdatavalid, //                   .readdatavalid
		input  wire [0:0]  mm_video_bridge_s0_burstcount,    //                   .burstcount
		input  wire [31:0] mm_video_bridge_s0_writedata,     //                   .writedata
		input  wire [23:0] mm_video_bridge_s0_address,       //                   .address
		input  wire        mm_video_bridge_s0_write,         //                   .write
		input  wire        mm_video_bridge_s0_read,          //                   .read
		input  wire [3:0]  mm_video_bridge_s0_byteenable,    //                   .byteenable
		input  wire        mm_video_bridge_s0_debugaccess,   //                   .debugaccess
		input  wire        reset_reset                       //              reset.reset
	);

	wire         hdmi_dmac_0_m_axis_tvalid;                     // hdmi_dmac_0:m_axis_valid -> axi_hdmi_tx_0:vdma_valid
	wire         hdmi_dmac_0_m_axis_tready;                     // axi_hdmi_tx_0:vdma_ready -> hdmi_dmac_0:m_axis_ready
	wire         hdmi_dmac_0_m_axis_tlast;                      // hdmi_dmac_0:m_axis_last -> axi_hdmi_tx_0:vdma_end_of_frame
	wire  [63:0] hdmi_dmac_0_m_axis_tdata;                      // hdmi_dmac_0:m_axis_data -> axi_hdmi_tx_0:vdma_data
	wire         clock_in_out_clk_clk;                          // clock_in:out_clk -> [axi_hdmi_tx_0:s_axi_aclk, axi_hdmi_tx_0:vdma_clk, hdmi_dmac_0:m_axis_aclk, hdmi_dmac_0:m_src_axi_aclk, hdmi_dmac_0:s_axi_aclk, mm_interconnect_0:clock_in_out_clk_clk, mm_video_bridge:clk, reset_in:clk, rst_controller:clk]
	wire         hdmi_pll_outclk0_clk;                          // hdmi_pll:outclk_0 -> axi_hdmi_tx_0:hdmi_clk
	wire         reset_in_out_reset_reset;                      // reset_in:out_reset -> [axi_hdmi_tx_0:s_axi_aresetn, hdmi_dmac_0:m_src_axi_aresetn, hdmi_dmac_0:s_axi_aresetn, hdmi_pll:rst, mm_video_bridge:reset, rst_controller:reset_in0]
	wire         mm_video_bridge_m0_waitrequest;                // mm_interconnect_0:mm_video_bridge_m0_waitrequest -> mm_video_bridge:m0_waitrequest
	wire  [31:0] mm_video_bridge_m0_readdata;                   // mm_interconnect_0:mm_video_bridge_m0_readdata -> mm_video_bridge:m0_readdata
	wire         mm_video_bridge_m0_debugaccess;                // mm_video_bridge:m0_debugaccess -> mm_interconnect_0:mm_video_bridge_m0_debugaccess
	wire  [23:0] mm_video_bridge_m0_address;                    // mm_video_bridge:m0_address -> mm_interconnect_0:mm_video_bridge_m0_address
	wire         mm_video_bridge_m0_read;                       // mm_video_bridge:m0_read -> mm_interconnect_0:mm_video_bridge_m0_read
	wire   [3:0] mm_video_bridge_m0_byteenable;                 // mm_video_bridge:m0_byteenable -> mm_interconnect_0:mm_video_bridge_m0_byteenable
	wire         mm_video_bridge_m0_readdatavalid;              // mm_interconnect_0:mm_video_bridge_m0_readdatavalid -> mm_video_bridge:m0_readdatavalid
	wire  [31:0] mm_video_bridge_m0_writedata;                  // mm_video_bridge:m0_writedata -> mm_interconnect_0:mm_video_bridge_m0_writedata
	wire         mm_video_bridge_m0_write;                      // mm_video_bridge:m0_write -> mm_interconnect_0:mm_video_bridge_m0_write
	wire   [0:0] mm_video_bridge_m0_burstcount;                 // mm_video_bridge:m0_burstcount -> mm_interconnect_0:mm_video_bridge_m0_burstcount
	wire  [10:0] mm_interconnect_0_hdmi_dmac_0_s_axi_awaddr;    // mm_interconnect_0:hdmi_dmac_0_s_axi_awaddr -> hdmi_dmac_0:s_axi_awaddr
	wire   [1:0] mm_interconnect_0_hdmi_dmac_0_s_axi_bresp;     // hdmi_dmac_0:s_axi_bresp -> mm_interconnect_0:hdmi_dmac_0_s_axi_bresp
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_arready;   // hdmi_dmac_0:s_axi_arready -> mm_interconnect_0:hdmi_dmac_0_s_axi_arready
	wire  [31:0] mm_interconnect_0_hdmi_dmac_0_s_axi_rdata;     // hdmi_dmac_0:s_axi_rdata -> mm_interconnect_0:hdmi_dmac_0_s_axi_rdata
	wire   [3:0] mm_interconnect_0_hdmi_dmac_0_s_axi_wstrb;     // mm_interconnect_0:hdmi_dmac_0_s_axi_wstrb -> hdmi_dmac_0:s_axi_wstrb
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_wready;    // hdmi_dmac_0:s_axi_wready -> mm_interconnect_0:hdmi_dmac_0_s_axi_wready
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_awready;   // hdmi_dmac_0:s_axi_awready -> mm_interconnect_0:hdmi_dmac_0_s_axi_awready
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_rready;    // mm_interconnect_0:hdmi_dmac_0_s_axi_rready -> hdmi_dmac_0:s_axi_rready
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_bready;    // mm_interconnect_0:hdmi_dmac_0_s_axi_bready -> hdmi_dmac_0:s_axi_bready
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_wvalid;    // mm_interconnect_0:hdmi_dmac_0_s_axi_wvalid -> hdmi_dmac_0:s_axi_wvalid
	wire  [10:0] mm_interconnect_0_hdmi_dmac_0_s_axi_araddr;    // mm_interconnect_0:hdmi_dmac_0_s_axi_araddr -> hdmi_dmac_0:s_axi_araddr
	wire   [2:0] mm_interconnect_0_hdmi_dmac_0_s_axi_arprot;    // mm_interconnect_0:hdmi_dmac_0_s_axi_arprot -> hdmi_dmac_0:s_axi_arprot
	wire   [1:0] mm_interconnect_0_hdmi_dmac_0_s_axi_rresp;     // hdmi_dmac_0:s_axi_rresp -> mm_interconnect_0:hdmi_dmac_0_s_axi_rresp
	wire   [2:0] mm_interconnect_0_hdmi_dmac_0_s_axi_awprot;    // mm_interconnect_0:hdmi_dmac_0_s_axi_awprot -> hdmi_dmac_0:s_axi_awprot
	wire  [31:0] mm_interconnect_0_hdmi_dmac_0_s_axi_wdata;     // mm_interconnect_0:hdmi_dmac_0_s_axi_wdata -> hdmi_dmac_0:s_axi_wdata
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_arvalid;   // mm_interconnect_0:hdmi_dmac_0_s_axi_arvalid -> hdmi_dmac_0:s_axi_arvalid
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_bvalid;    // hdmi_dmac_0:s_axi_bvalid -> mm_interconnect_0:hdmi_dmac_0_s_axi_bvalid
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_awvalid;   // mm_interconnect_0:hdmi_dmac_0_s_axi_awvalid -> hdmi_dmac_0:s_axi_awvalid
	wire         mm_interconnect_0_hdmi_dmac_0_s_axi_rvalid;    // hdmi_dmac_0:s_axi_rvalid -> mm_interconnect_0:hdmi_dmac_0_s_axi_rvalid
	wire  [15:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_awaddr;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_awaddr -> axi_hdmi_tx_0:s_axi_awaddr
	wire   [1:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_bresp;   // axi_hdmi_tx_0:s_axi_bresp -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_bresp
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_arready; // axi_hdmi_tx_0:s_axi_arready -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_arready
	wire  [31:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_rdata;   // axi_hdmi_tx_0:s_axi_rdata -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_rdata
	wire   [3:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_wstrb;   // mm_interconnect_0:axi_hdmi_tx_0_s_axi_wstrb -> axi_hdmi_tx_0:s_axi_wstrb
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_wready;  // axi_hdmi_tx_0:s_axi_wready -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_wready
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_awready; // axi_hdmi_tx_0:s_axi_awready -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_awready
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_rready;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_rready -> axi_hdmi_tx_0:s_axi_rready
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_bready;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_bready -> axi_hdmi_tx_0:s_axi_bready
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_wvalid;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_wvalid -> axi_hdmi_tx_0:s_axi_wvalid
	wire  [15:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_araddr;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_araddr -> axi_hdmi_tx_0:s_axi_araddr
	wire   [2:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_arprot;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_arprot -> axi_hdmi_tx_0:s_axi_arprot
	wire   [1:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_rresp;   // axi_hdmi_tx_0:s_axi_rresp -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_rresp
	wire   [2:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_awprot;  // mm_interconnect_0:axi_hdmi_tx_0_s_axi_awprot -> axi_hdmi_tx_0:s_axi_awprot
	wire  [31:0] mm_interconnect_0_axi_hdmi_tx_0_s_axi_wdata;   // mm_interconnect_0:axi_hdmi_tx_0_s_axi_wdata -> axi_hdmi_tx_0:s_axi_wdata
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_arvalid; // mm_interconnect_0:axi_hdmi_tx_0_s_axi_arvalid -> axi_hdmi_tx_0:s_axi_arvalid
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_bvalid;  // axi_hdmi_tx_0:s_axi_bvalid -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_bvalid
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_awvalid; // mm_interconnect_0:axi_hdmi_tx_0_s_axi_awvalid -> axi_hdmi_tx_0:s_axi_awvalid
	wire         mm_interconnect_0_axi_hdmi_tx_0_s_axi_rvalid;  // axi_hdmi_tx_0:s_axi_rvalid -> mm_interconnect_0:axi_hdmi_tx_0_s_axi_rvalid
	wire         rst_controller_reset_out_reset;                // rst_controller:reset_out -> mm_interconnect_0:mm_video_bridge_m0_translator_reset_reset_bridge_in_reset_reset

	video_sys_axi_hdmi_tx_0 axi_hdmi_tx_0 (
		.s_axi_aclk        (clock_in_out_clk_clk),                          //   input,   width = 1, s_axi_clock.clk
		.s_axi_awvalid     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awvalid), //   input,   width = 1,       s_axi.awvalid
		.s_axi_awaddr      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awaddr),  //   input,  width = 16,            .awaddr
		.s_axi_awprot      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awprot),  //   input,   width = 3,            .awprot
		.s_axi_awready     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awready), //  output,   width = 1,            .awready
		.s_axi_wvalid      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wvalid),  //   input,   width = 1,            .wvalid
		.s_axi_wdata       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wdata),   //   input,  width = 32,            .wdata
		.s_axi_wstrb       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wstrb),   //   input,   width = 4,            .wstrb
		.s_axi_wready      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wready),  //  output,   width = 1,            .wready
		.s_axi_bvalid      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bvalid),  //  output,   width = 1,            .bvalid
		.s_axi_bresp       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bresp),   //  output,   width = 2,            .bresp
		.s_axi_bready      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bready),  //   input,   width = 1,            .bready
		.s_axi_arvalid     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arvalid), //   input,   width = 1,            .arvalid
		.s_axi_araddr      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_araddr),  //   input,  width = 16,            .araddr
		.s_axi_arprot      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arprot),  //   input,   width = 3,            .arprot
		.s_axi_arready     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arready), //  output,   width = 1,            .arready
		.s_axi_rvalid      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rvalid),  //  output,   width = 1,            .rvalid
		.s_axi_rresp       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rresp),   //  output,   width = 2,            .rresp
		.s_axi_rdata       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rdata),   //  output,  width = 32,            .rdata
		.s_axi_rready      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rready),  //   input,   width = 1,            .rready
		.hdmi_clk          (hdmi_pll_outclk0_clk),                          //   input,   width = 1,  hdmi_clock.clk
		.hdmi_out_clk      (hdmi_h_clk),                                    //  output,   width = 1,     hdmi_if.h_clk
		.hdmi_16_hsync     (hdmi_h16_hsync),                                //  output,   width = 1,            .h16_hsync
		.hdmi_16_vsync     (hdmi_h16_vsync),                                //  output,   width = 1,            .h16_vsync
		.hdmi_16_data_e    (hdmi_h16_data_e),                               //  output,   width = 1,            .h16_data_e
		.hdmi_16_data      (hdmi_h16_data),                                 //  output,  width = 16,            .h16_data
		.hdmi_16_es_data   (hdmi_h16_es_data),                              //  output,  width = 16,            .h16_es_data
		.hdmi_24_hsync     (hdmi_h24_hsync),                                //  output,   width = 1,            .h24_hsync
		.hdmi_24_vsync     (hdmi_h24_vsync),                                //  output,   width = 1,            .h24_vsync
		.hdmi_24_data_e    (hdmi_h24_data_e),                               //  output,   width = 1,            .h24_data_e
		.hdmi_24_data      (hdmi_h24_data),                                 //  output,  width = 24,            .h24_data
		.hdmi_36_hsync     (hdmi_h36_hsync),                                //  output,   width = 1,            .h36_hsync
		.hdmi_36_vsync     (hdmi_h36_vsync),                                //  output,   width = 1,            .h36_vsync
		.hdmi_36_data_e    (hdmi_h36_data_e),                               //  output,   width = 1,            .h36_data_e
		.hdmi_36_data      (hdmi_h36_data),                                 //  output,  width = 36,            .h36_data
		.vdma_clk          (clock_in_out_clk_clk),                          //   input,   width = 1,  vdma_clock.clk
		.s_axi_aresetn     (~reset_in_out_reset_reset),                     //   input,   width = 1,  vdma_reset.reset_n
		.vdma_end_of_frame (hdmi_dmac_0_m_axis_tlast),                      //   input,   width = 1,     vdma_if.tlast
		.vdma_valid        (hdmi_dmac_0_m_axis_tvalid),                     //   input,   width = 1,            .tvalid
		.vdma_data         (hdmi_dmac_0_m_axis_tdata),                      //   input,  width = 64,            .tdata
		.vdma_ready        (hdmi_dmac_0_m_axis_tready)                      //  output,   width = 1,            .tready
	);

	video_sys_clock_in clock_in (
		.in_clk  (clk_clk),              //   input,  width = 1,  in_clk.clk
		.out_clk (clock_in_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	video_sys_axi_dmac_0 hdmi_dmac_0 (
		.s_axi_aclk        (clock_in_out_clk_clk),                        //   input,   width = 1,        s_axi_clock.clk
		.s_axi_aresetn     (~reset_in_out_reset_reset),                   //   input,   width = 1,        s_axi_reset.reset_n
		.s_axi_awvalid     (mm_interconnect_0_hdmi_dmac_0_s_axi_awvalid), //   input,   width = 1,              s_axi.awvalid
		.s_axi_awaddr      (mm_interconnect_0_hdmi_dmac_0_s_axi_awaddr),  //   input,  width = 11,                   .awaddr
		.s_axi_awprot      (mm_interconnect_0_hdmi_dmac_0_s_axi_awprot),  //   input,   width = 3,                   .awprot
		.s_axi_awready     (mm_interconnect_0_hdmi_dmac_0_s_axi_awready), //  output,   width = 1,                   .awready
		.s_axi_wvalid      (mm_interconnect_0_hdmi_dmac_0_s_axi_wvalid),  //   input,   width = 1,                   .wvalid
		.s_axi_wdata       (mm_interconnect_0_hdmi_dmac_0_s_axi_wdata),   //   input,  width = 32,                   .wdata
		.s_axi_wstrb       (mm_interconnect_0_hdmi_dmac_0_s_axi_wstrb),   //   input,   width = 4,                   .wstrb
		.s_axi_wready      (mm_interconnect_0_hdmi_dmac_0_s_axi_wready),  //  output,   width = 1,                   .wready
		.s_axi_bvalid      (mm_interconnect_0_hdmi_dmac_0_s_axi_bvalid),  //  output,   width = 1,                   .bvalid
		.s_axi_bresp       (mm_interconnect_0_hdmi_dmac_0_s_axi_bresp),   //  output,   width = 2,                   .bresp
		.s_axi_bready      (mm_interconnect_0_hdmi_dmac_0_s_axi_bready),  //   input,   width = 1,                   .bready
		.s_axi_arvalid     (mm_interconnect_0_hdmi_dmac_0_s_axi_arvalid), //   input,   width = 1,                   .arvalid
		.s_axi_araddr      (mm_interconnect_0_hdmi_dmac_0_s_axi_araddr),  //   input,  width = 11,                   .araddr
		.s_axi_arprot      (mm_interconnect_0_hdmi_dmac_0_s_axi_arprot),  //   input,   width = 3,                   .arprot
		.s_axi_arready     (mm_interconnect_0_hdmi_dmac_0_s_axi_arready), //  output,   width = 1,                   .arready
		.s_axi_rvalid      (mm_interconnect_0_hdmi_dmac_0_s_axi_rvalid),  //  output,   width = 1,                   .rvalid
		.s_axi_rresp       (mm_interconnect_0_hdmi_dmac_0_s_axi_rresp),   //  output,   width = 2,                   .rresp
		.s_axi_rdata       (mm_interconnect_0_hdmi_dmac_0_s_axi_rdata),   //  output,  width = 32,                   .rdata
		.s_axi_rready      (mm_interconnect_0_hdmi_dmac_0_s_axi_rready),  //   input,   width = 1,                   .rready
		.irq               (hdmi_dmac_irq),                               //  output,   width = 1,   interrupt_sender.irq
		.m_src_axi_aclk    (clock_in_out_clk_clk),                        //   input,   width = 1,    m_src_axi_clock.clk
		.m_src_axi_aresetn (~reset_in_out_reset_reset),                   //   input,   width = 1,    m_src_axi_reset.reset_n
		.m_axis_aclk       (clock_in_out_clk_clk),                        //   input,   width = 1,     if_m_axis_aclk.clk
		.m_axis_xfer_req   (),                                            //  output,   width = 1, if_m_axis_xfer_req.xfer_req
		.m_axis_valid      (hdmi_dmac_0_m_axis_tvalid),                   //  output,   width = 1,             m_axis.tvalid
		.m_axis_last       (hdmi_dmac_0_m_axis_tlast),                    //  output,   width = 1,                   .tlast
		.m_axis_ready      (hdmi_dmac_0_m_axis_tready),                   //   input,   width = 1,                   .tready
		.m_axis_data       (hdmi_dmac_0_m_axis_tdata),                    //  output,  width = 64,                   .tdata
		.m_src_axi_awvalid (hdmi_dmac_master_awvalid),                    //  output,   width = 1,          m_src_axi.awvalid
		.m_src_axi_awaddr  (hdmi_dmac_master_awaddr),                     //  output,  width = 32,                   .awaddr
		.m_src_axi_awready (hdmi_dmac_master_awready),                    //   input,   width = 1,                   .awready
		.m_src_axi_wvalid  (hdmi_dmac_master_wvalid),                     //  output,   width = 1,                   .wvalid
		.m_src_axi_wdata   (hdmi_dmac_master_wdata),                      //  output,  width = 64,                   .wdata
		.m_src_axi_wstrb   (hdmi_dmac_master_wstrb),                      //  output,   width = 8,                   .wstrb
		.m_src_axi_wready  (hdmi_dmac_master_wready),                     //   input,   width = 1,                   .wready
		.m_src_axi_bvalid  (hdmi_dmac_master_bvalid),                     //   input,   width = 1,                   .bvalid
		.m_src_axi_bresp   (hdmi_dmac_master_bresp),                      //   input,   width = 2,                   .bresp
		.m_src_axi_bready  (hdmi_dmac_master_bready),                     //  output,   width = 1,                   .bready
		.m_src_axi_arvalid (hdmi_dmac_master_arvalid),                    //  output,   width = 1,                   .arvalid
		.m_src_axi_araddr  (hdmi_dmac_master_araddr),                     //  output,  width = 32,                   .araddr
		.m_src_axi_arready (hdmi_dmac_master_arready),                    //   input,   width = 1,                   .arready
		.m_src_axi_rvalid  (hdmi_dmac_master_rvalid),                     //   input,   width = 1,                   .rvalid
		.m_src_axi_rresp   (hdmi_dmac_master_rresp),                      //   input,   width = 2,                   .rresp
		.m_src_axi_rdata   (hdmi_dmac_master_rdata),                      //   input,  width = 64,                   .rdata
		.m_src_axi_rready  (hdmi_dmac_master_rready),                     //  output,   width = 1,                   .rready
		.m_src_axi_awlen   (hdmi_dmac_master_awlen),                      //  output,   width = 4,                   .awlen
		.m_src_axi_awsize  (hdmi_dmac_master_awsize),                     //  output,   width = 3,                   .awsize
		.m_src_axi_awburst (hdmi_dmac_master_awburst),                    //  output,   width = 2,                   .awburst
		.m_src_axi_awcache (hdmi_dmac_master_awcache),                    //  output,   width = 4,                   .awcache
		.m_src_axi_awprot  (hdmi_dmac_master_awprot),                     //  output,   width = 3,                   .awprot
		.m_src_axi_wlast   (hdmi_dmac_master_wlast),                      //  output,   width = 1,                   .wlast
		.m_src_axi_arlen   (hdmi_dmac_master_arlen),                      //  output,   width = 4,                   .arlen
		.m_src_axi_arsize  (hdmi_dmac_master_arsize),                     //  output,   width = 3,                   .arsize
		.m_src_axi_arburst (hdmi_dmac_master_arburst),                    //  output,   width = 2,                   .arburst
		.m_src_axi_arcache (hdmi_dmac_master_arcache),                    //  output,   width = 4,                   .arcache
		.m_src_axi_arprot  (hdmi_dmac_master_arprot),                     //  output,   width = 3,                   .arprot
		.m_src_axi_awid    (hdmi_dmac_master_awid),                       //  output,   width = 1,                   .awid
		.m_src_axi_awlock  (hdmi_dmac_master_awlock),                     //  output,   width = 2,                   .awlock
		.m_src_axi_wid     (hdmi_dmac_master_wid),                        //  output,   width = 1,                   .wid
		.m_src_axi_arid    (hdmi_dmac_master_arid),                       //  output,   width = 1,                   .arid
		.m_src_axi_arlock  (hdmi_dmac_master_arlock),                     //  output,   width = 2,                   .arlock
		.m_src_axi_rid     (hdmi_dmac_master_rid),                        //   input,   width = 1,                   .rid
		.m_src_axi_bid     (hdmi_dmac_master_bid),                        //   input,   width = 1,                   .bid
		.m_src_axi_rlast   (hdmi_dmac_master_rlast)                       //   input,   width = 1,                   .rlast
	);

	video_sys_iopll_0 hdmi_pll (
		.refclk   (hdmi_pll_refclk_clk),      //   input,  width = 1,  refclk.clk
		.rst      (reset_in_out_reset_reset), //   input,  width = 1,   reset.reset
		.outclk_0 (hdmi_pll_outclk0_clk)      //  output,  width = 1, outclk0.clk
	);

	video_sys_mm_bridge_1 mm_video_bridge (
		.clk              (clock_in_out_clk_clk),             //   input,   width = 1,   clk.clk
		.reset            (reset_in_out_reset_reset),         //   input,   width = 1, reset.reset
		.s0_waitrequest   (mm_video_bridge_s0_waitrequest),   //  output,   width = 1,    s0.waitrequest
		.s0_readdata      (mm_video_bridge_s0_readdata),      //  output,  width = 32,      .readdata
		.s0_readdatavalid (mm_video_bridge_s0_readdatavalid), //  output,   width = 1,      .readdatavalid
		.s0_burstcount    (mm_video_bridge_s0_burstcount),    //   input,   width = 1,      .burstcount
		.s0_writedata     (mm_video_bridge_s0_writedata),     //   input,  width = 32,      .writedata
		.s0_address       (mm_video_bridge_s0_address),       //   input,  width = 24,      .address
		.s0_write         (mm_video_bridge_s0_write),         //   input,   width = 1,      .write
		.s0_read          (mm_video_bridge_s0_read),          //   input,   width = 1,      .read
		.s0_byteenable    (mm_video_bridge_s0_byteenable),    //   input,   width = 4,      .byteenable
		.s0_debugaccess   (mm_video_bridge_s0_debugaccess),   //   input,   width = 1,      .debugaccess
		.m0_waitrequest   (mm_video_bridge_m0_waitrequest),   //   input,   width = 1,    m0.waitrequest
		.m0_readdata      (mm_video_bridge_m0_readdata),      //   input,  width = 32,      .readdata
		.m0_readdatavalid (mm_video_bridge_m0_readdatavalid), //   input,   width = 1,      .readdatavalid
		.m0_burstcount    (mm_video_bridge_m0_burstcount),    //  output,   width = 1,      .burstcount
		.m0_writedata     (mm_video_bridge_m0_writedata),     //  output,  width = 32,      .writedata
		.m0_address       (mm_video_bridge_m0_address),       //  output,  width = 24,      .address
		.m0_write         (mm_video_bridge_m0_write),         //  output,   width = 1,      .write
		.m0_read          (mm_video_bridge_m0_read),          //  output,   width = 1,      .read
		.m0_byteenable    (mm_video_bridge_m0_byteenable),    //  output,   width = 4,      .byteenable
		.m0_debugaccess   (mm_video_bridge_m0_debugaccess)    //  output,   width = 1,      .debugaccess
	);

	video_sys_reset_in reset_in (
		.clk       (clock_in_out_clk_clk),     //   input,  width = 1,       clk.clk
		.in_reset  (reset_reset),              //   input,  width = 1,  in_reset.reset
		.out_reset (reset_in_out_reset_reset)  //  output,  width = 1, out_reset.reset
	);

	video_sys_altera_mm_interconnect_1920_ucuxaca mm_interconnect_0 (
		.mm_video_bridge_m0_address                                      (mm_video_bridge_m0_address),                    //   input,  width = 24,                                        mm_video_bridge_m0.address
		.mm_video_bridge_m0_waitrequest                                  (mm_video_bridge_m0_waitrequest),                //  output,   width = 1,                                                          .waitrequest
		.mm_video_bridge_m0_burstcount                                   (mm_video_bridge_m0_burstcount),                 //   input,   width = 1,                                                          .burstcount
		.mm_video_bridge_m0_byteenable                                   (mm_video_bridge_m0_byteenable),                 //   input,   width = 4,                                                          .byteenable
		.mm_video_bridge_m0_read                                         (mm_video_bridge_m0_read),                       //   input,   width = 1,                                                          .read
		.mm_video_bridge_m0_readdata                                     (mm_video_bridge_m0_readdata),                   //  output,  width = 32,                                                          .readdata
		.mm_video_bridge_m0_readdatavalid                                (mm_video_bridge_m0_readdatavalid),              //  output,   width = 1,                                                          .readdatavalid
		.mm_video_bridge_m0_write                                        (mm_video_bridge_m0_write),                      //   input,   width = 1,                                                          .write
		.mm_video_bridge_m0_writedata                                    (mm_video_bridge_m0_writedata),                  //   input,  width = 32,                                                          .writedata
		.mm_video_bridge_m0_debugaccess                                  (mm_video_bridge_m0_debugaccess),                //   input,   width = 1,                                                          .debugaccess
		.hdmi_dmac_0_s_axi_awaddr                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_awaddr),    //  output,  width = 11,                                         hdmi_dmac_0_s_axi.awaddr
		.hdmi_dmac_0_s_axi_awprot                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_awprot),    //  output,   width = 3,                                                          .awprot
		.hdmi_dmac_0_s_axi_awvalid                                       (mm_interconnect_0_hdmi_dmac_0_s_axi_awvalid),   //  output,   width = 1,                                                          .awvalid
		.hdmi_dmac_0_s_axi_awready                                       (mm_interconnect_0_hdmi_dmac_0_s_axi_awready),   //   input,   width = 1,                                                          .awready
		.hdmi_dmac_0_s_axi_wdata                                         (mm_interconnect_0_hdmi_dmac_0_s_axi_wdata),     //  output,  width = 32,                                                          .wdata
		.hdmi_dmac_0_s_axi_wstrb                                         (mm_interconnect_0_hdmi_dmac_0_s_axi_wstrb),     //  output,   width = 4,                                                          .wstrb
		.hdmi_dmac_0_s_axi_wvalid                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_wvalid),    //  output,   width = 1,                                                          .wvalid
		.hdmi_dmac_0_s_axi_wready                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_wready),    //   input,   width = 1,                                                          .wready
		.hdmi_dmac_0_s_axi_bresp                                         (mm_interconnect_0_hdmi_dmac_0_s_axi_bresp),     //   input,   width = 2,                                                          .bresp
		.hdmi_dmac_0_s_axi_bvalid                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_bvalid),    //   input,   width = 1,                                                          .bvalid
		.hdmi_dmac_0_s_axi_bready                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_bready),    //  output,   width = 1,                                                          .bready
		.hdmi_dmac_0_s_axi_araddr                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_araddr),    //  output,  width = 11,                                                          .araddr
		.hdmi_dmac_0_s_axi_arprot                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_arprot),    //  output,   width = 3,                                                          .arprot
		.hdmi_dmac_0_s_axi_arvalid                                       (mm_interconnect_0_hdmi_dmac_0_s_axi_arvalid),   //  output,   width = 1,                                                          .arvalid
		.hdmi_dmac_0_s_axi_arready                                       (mm_interconnect_0_hdmi_dmac_0_s_axi_arready),   //   input,   width = 1,                                                          .arready
		.hdmi_dmac_0_s_axi_rdata                                         (mm_interconnect_0_hdmi_dmac_0_s_axi_rdata),     //   input,  width = 32,                                                          .rdata
		.hdmi_dmac_0_s_axi_rresp                                         (mm_interconnect_0_hdmi_dmac_0_s_axi_rresp),     //   input,   width = 2,                                                          .rresp
		.hdmi_dmac_0_s_axi_rvalid                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_rvalid),    //   input,   width = 1,                                                          .rvalid
		.hdmi_dmac_0_s_axi_rready                                        (mm_interconnect_0_hdmi_dmac_0_s_axi_rready),    //  output,   width = 1,                                                          .rready
		.axi_hdmi_tx_0_s_axi_awaddr                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awaddr),  //  output,  width = 16,                                       axi_hdmi_tx_0_s_axi.awaddr
		.axi_hdmi_tx_0_s_axi_awprot                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awprot),  //  output,   width = 3,                                                          .awprot
		.axi_hdmi_tx_0_s_axi_awvalid                                     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awvalid), //  output,   width = 1,                                                          .awvalid
		.axi_hdmi_tx_0_s_axi_awready                                     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_awready), //   input,   width = 1,                                                          .awready
		.axi_hdmi_tx_0_s_axi_wdata                                       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wdata),   //  output,  width = 32,                                                          .wdata
		.axi_hdmi_tx_0_s_axi_wstrb                                       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wstrb),   //  output,   width = 4,                                                          .wstrb
		.axi_hdmi_tx_0_s_axi_wvalid                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wvalid),  //  output,   width = 1,                                                          .wvalid
		.axi_hdmi_tx_0_s_axi_wready                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_wready),  //   input,   width = 1,                                                          .wready
		.axi_hdmi_tx_0_s_axi_bresp                                       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bresp),   //   input,   width = 2,                                                          .bresp
		.axi_hdmi_tx_0_s_axi_bvalid                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bvalid),  //   input,   width = 1,                                                          .bvalid
		.axi_hdmi_tx_0_s_axi_bready                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_bready),  //  output,   width = 1,                                                          .bready
		.axi_hdmi_tx_0_s_axi_araddr                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_araddr),  //  output,  width = 16,                                                          .araddr
		.axi_hdmi_tx_0_s_axi_arprot                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arprot),  //  output,   width = 3,                                                          .arprot
		.axi_hdmi_tx_0_s_axi_arvalid                                     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arvalid), //  output,   width = 1,                                                          .arvalid
		.axi_hdmi_tx_0_s_axi_arready                                     (mm_interconnect_0_axi_hdmi_tx_0_s_axi_arready), //   input,   width = 1,                                                          .arready
		.axi_hdmi_tx_0_s_axi_rdata                                       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rdata),   //   input,  width = 32,                                                          .rdata
		.axi_hdmi_tx_0_s_axi_rresp                                       (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rresp),   //   input,   width = 2,                                                          .rresp
		.axi_hdmi_tx_0_s_axi_rvalid                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rvalid),  //   input,   width = 1,                                                          .rvalid
		.axi_hdmi_tx_0_s_axi_rready                                      (mm_interconnect_0_axi_hdmi_tx_0_s_axi_rready),  //  output,   width = 1,                                                          .rready
		.mm_video_bridge_m0_translator_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                //   input,   width = 1, mm_video_bridge_m0_translator_reset_reset_bridge_in_reset.reset
		.clock_in_out_clk_clk                                            (clock_in_out_clk_clk)                           //   input,   width = 1,                                          clock_in_out_clk.clk
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("both"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (reset_in_out_reset_reset),       //   input,  width = 1, reset_in0.reset
		.clk            (clock_in_out_clk_clk),           //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_reset_out_reset), //  output,  width = 1, reset_out.reset
		.reset_req      (),                               // (terminated),                       
		.reset_req_in0  (1'b0),                           // (terminated),                       
		.reset_in1      (1'b0),                           // (terminated),                       
		.reset_req_in1  (1'b0),                           // (terminated),                       
		.reset_in2      (1'b0),                           // (terminated),                       
		.reset_req_in2  (1'b0),                           // (terminated),                       
		.reset_in3      (1'b0),                           // (terminated),                       
		.reset_req_in3  (1'b0),                           // (terminated),                       
		.reset_in4      (1'b0),                           // (terminated),                       
		.reset_req_in4  (1'b0),                           // (terminated),                       
		.reset_in5      (1'b0),                           // (terminated),                       
		.reset_req_in5  (1'b0),                           // (terminated),                       
		.reset_in6      (1'b0),                           // (terminated),                       
		.reset_req_in6  (1'b0),                           // (terminated),                       
		.reset_in7      (1'b0),                           // (terminated),                       
		.reset_req_in7  (1'b0),                           // (terminated),                       
		.reset_in8      (1'b0),                           // (terminated),                       
		.reset_req_in8  (1'b0),                           // (terminated),                       
		.reset_in9      (1'b0),                           // (terminated),                       
		.reset_req_in9  (1'b0),                           // (terminated),                       
		.reset_in10     (1'b0),                           // (terminated),                       
		.reset_req_in10 (1'b0),                           // (terminated),                       
		.reset_in11     (1'b0),                           // (terminated),                       
		.reset_req_in11 (1'b0),                           // (terminated),                       
		.reset_in12     (1'b0),                           // (terminated),                       
		.reset_req_in12 (1'b0),                           // (terminated),                       
		.reset_in13     (1'b0),                           // (terminated),                       
		.reset_req_in13 (1'b0),                           // (terminated),                       
		.reset_in14     (1'b0),                           // (terminated),                       
		.reset_req_in14 (1'b0),                           // (terminated),                       
		.reset_in15     (1'b0),                           // (terminated),                       
		.reset_req_in15 (1'b0)                            // (terminated),                       
	);

endmodule
