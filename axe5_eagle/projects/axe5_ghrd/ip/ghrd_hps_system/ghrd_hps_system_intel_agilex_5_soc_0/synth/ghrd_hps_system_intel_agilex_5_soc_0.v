// ghrd_hps_system_intel_agilex_5_soc_0.v

// Generated using ACDS version 23.4 79

`timescale 1 ps / 1 ps
module ghrd_hps_system_intel_agilex_5_soc_0 (
		output wire         h2f_reset_reset_n,                      //                h2f_reset.reset_n
		input  wire         hps2fpga_axi_clock_clk,                 //       hps2fpga_axi_clock.clk
		input  wire         hps2fpga_axi_reset_reset_n,             //       hps2fpga_axi_reset.reset_n
		output wire [3:0]   hps2fpga_awid,                          //                 hps2fpga.awid
		output wire [31:0]  hps2fpga_awaddr,                        //                         .awaddr
		output wire [7:0]   hps2fpga_awlen,                         //                         .awlen
		output wire [2:0]   hps2fpga_awsize,                        //                         .awsize
		output wire [1:0]   hps2fpga_awburst,                       //                         .awburst
		output wire         hps2fpga_awlock,                        //                         .awlock
		output wire [3:0]   hps2fpga_awcache,                       //                         .awcache
		output wire [2:0]   hps2fpga_awprot,                        //                         .awprot
		output wire         hps2fpga_awvalid,                       //                         .awvalid
		input  wire         hps2fpga_awready,                       //                         .awready
		output wire [31:0]  hps2fpga_wdata,                         //                         .wdata
		output wire [3:0]   hps2fpga_wstrb,                         //                         .wstrb
		output wire         hps2fpga_wlast,                         //                         .wlast
		output wire         hps2fpga_wvalid,                        //                         .wvalid
		input  wire         hps2fpga_wready,                        //                         .wready
		input  wire [3:0]   hps2fpga_bid,                           //                         .bid
		input  wire [1:0]   hps2fpga_bresp,                         //                         .bresp
		input  wire         hps2fpga_bvalid,                        //                         .bvalid
		output wire         hps2fpga_bready,                        //                         .bready
		output wire [3:0]   hps2fpga_arid,                          //                         .arid
		output wire [31:0]  hps2fpga_araddr,                        //                         .araddr
		output wire [7:0]   hps2fpga_arlen,                         //                         .arlen
		output wire [2:0]   hps2fpga_arsize,                        //                         .arsize
		output wire [1:0]   hps2fpga_arburst,                       //                         .arburst
		output wire         hps2fpga_arlock,                        //                         .arlock
		output wire [3:0]   hps2fpga_arcache,                       //                         .arcache
		output wire [2:0]   hps2fpga_arprot,                        //                         .arprot
		output wire         hps2fpga_arvalid,                       //                         .arvalid
		input  wire         hps2fpga_arready,                       //                         .arready
		input  wire [3:0]   hps2fpga_rid,                           //                         .rid
		input  wire [31:0]  hps2fpga_rdata,                         //                         .rdata
		input  wire [1:0]   hps2fpga_rresp,                         //                         .rresp
		input  wire         hps2fpga_rlast,                         //                         .rlast
		input  wire         hps2fpga_rvalid,                        //                         .rvalid
		output wire         hps2fpga_rready,                        //                         .rready
		input  wire         lwhps2fpga_axi_clock_clk,               //     lwhps2fpga_axi_clock.clk
		input  wire         lwhps2fpga_axi_reset_reset_n,           //     lwhps2fpga_axi_reset.reset_n
		output wire [3:0]   lwhps2fpga_awid,                        //               lwhps2fpga.awid
		output wire [28:0]  lwhps2fpga_awaddr,                      //                         .awaddr
		output wire [7:0]   lwhps2fpga_awlen,                       //                         .awlen
		output wire [2:0]   lwhps2fpga_awsize,                      //                         .awsize
		output wire [1:0]   lwhps2fpga_awburst,                     //                         .awburst
		output wire         lwhps2fpga_awlock,                      //                         .awlock
		output wire [3:0]   lwhps2fpga_awcache,                     //                         .awcache
		output wire [2:0]   lwhps2fpga_awprot,                      //                         .awprot
		output wire         lwhps2fpga_awvalid,                     //                         .awvalid
		input  wire         lwhps2fpga_awready,                     //                         .awready
		output wire [31:0]  lwhps2fpga_wdata,                       //                         .wdata
		output wire [3:0]   lwhps2fpga_wstrb,                       //                         .wstrb
		output wire         lwhps2fpga_wlast,                       //                         .wlast
		output wire         lwhps2fpga_wvalid,                      //                         .wvalid
		input  wire         lwhps2fpga_wready,                      //                         .wready
		input  wire [3:0]   lwhps2fpga_bid,                         //                         .bid
		input  wire [1:0]   lwhps2fpga_bresp,                       //                         .bresp
		input  wire         lwhps2fpga_bvalid,                      //                         .bvalid
		output wire         lwhps2fpga_bready,                      //                         .bready
		output wire [3:0]   lwhps2fpga_arid,                        //                         .arid
		output wire [28:0]  lwhps2fpga_araddr,                      //                         .araddr
		output wire [7:0]   lwhps2fpga_arlen,                       //                         .arlen
		output wire [2:0]   lwhps2fpga_arsize,                      //                         .arsize
		output wire [1:0]   lwhps2fpga_arburst,                     //                         .arburst
		output wire         lwhps2fpga_arlock,                      //                         .arlock
		output wire [3:0]   lwhps2fpga_arcache,                     //                         .arcache
		output wire [2:0]   lwhps2fpga_arprot,                      //                         .arprot
		output wire         lwhps2fpga_arvalid,                     //                         .arvalid
		input  wire         lwhps2fpga_arready,                     //                         .arready
		input  wire [3:0]   lwhps2fpga_rid,                         //                         .rid
		input  wire [31:0]  lwhps2fpga_rdata,                       //                         .rdata
		input  wire [1:0]   lwhps2fpga_rresp,                       //                         .rresp
		input  wire         lwhps2fpga_rlast,                       //                         .rlast
		input  wire         lwhps2fpga_rvalid,                      //                         .rvalid
		output wire         lwhps2fpga_rready,                      //                         .rready
		input  wire         emac_ptp_clk_clk,                       //             emac_ptp_clk.clk
		input  wire         emac_timestamp_clk_clk,                 //       emac_timestamp_clk.clk
		input  wire [63:0]  emac_timestamp_data_data_in,            //      emac_timestamp_data.data_in
		output wire         emac0_mdio_mac_mdc,                     //               emac0_mdio.mac_mdc
		input  wire         emac0_mdio_mac_mdi,                     //                         .mac_mdi
		output wire         emac0_mdio_mac_mdo,                     //                         .mac_mdo
		output wire         emac0_mdio_mac_mdoe,                    //                         .mac_mdoe
		output wire         emac0_app_rst_reset_n,                  //            emac0_app_rst.reset_n
		output wire         emac0_mac_tx_clk_o,                     //                    emac0.mac_tx_clk_o
		input  wire         emac0_mac_tx_clk_i,                     //                         .mac_tx_clk_i
		input  wire         emac0_mac_rx_clk,                       //                         .mac_rx_clk
		output wire         emac0_mac_rst_tx_n,                     //                         .mac_rst_tx_n
		output wire         emac0_mac_rst_rx_n,                     //                         .mac_rst_rx_n
		output wire         emac0_mac_txen,                         //                         .mac_txen
		output wire         emac0_mac_txer,                         //                         .mac_txer
		input  wire         emac0_mac_rxdv,                         //                         .mac_rxdv
		input  wire         emac0_mac_rxer,                         //                         .mac_rxer
		input  wire [7:0]   emac0_mac_rxd,                          //                         .mac_rxd
		input  wire         emac0_mac_col,                          //                         .mac_col
		input  wire         emac0_mac_crs,                          //                         .mac_crs
		output wire [2:0]   emac0_mac_speed,                        //                         .mac_speed
		output wire [7:0]   emac0_mac_txd_o,                        //                         .mac_txd_o
		output wire         emac2_app_rst_reset_n,                  //            emac2_app_rst.reset_n
		input  wire         spim0_miso_i,                           //                    spim0.miso_i
		output wire         spim0_mosi_o,                           //                         .mosi_o
		output wire         spim0_mosi_oe,                          //                         .mosi_oe
		input  wire         spim0_ss_in_n,                          //                         .ss_in_n
		output wire         spim0_ss0_n_o,                          //                         .ss0_n_o
		output wire         spim0_ss1_n_o,                          //                         .ss1_n_o
		output wire         spim0_ss2_n_o,                          //                         .ss2_n_o
		output wire         spim0_ss3_n_o,                          //                         .ss3_n_o
		output wire         spim0_sclk_out_clk,                     //           spim0_sclk_out.clk
		input  wire         I2C1_scl_i_clk,                         //               I2C1_scl_i.clk
		output wire         I2C1_scl_oe_clk,                        //              I2C1_scl_oe.clk
		input  wire         I2C1_sda_i,                             //                     I2C1.sda_i
		output wire         I2C1_sda_oe,                            //                         .sda_oe
		output wire         h2f_user0_clk_clk,                      //            h2f_user0_clk.clk
		output wire         h2f_user1_clk_clk,                      //            h2f_user1_clk.clk
		output wire         h2f_warm_reset_handshake_reset_req,     // h2f_warm_reset_handshake.reset_req
		input  wire         h2f_warm_reset_handshake_reset_ack,     //                         .reset_ack
		output wire         h2f_cold_reset_reset_n,                 //           h2f_cold_reset.reset_n
		input  wire         hps_io_hps_osc_clk,                     //                   hps_io.hps_osc_clk
		inout  wire         hps_io_sdmmc_data0,                     //                         .sdmmc_data0
		inout  wire         hps_io_sdmmc_data1,                     //                         .sdmmc_data1
		output wire         hps_io_sdmmc_cclk,                      //                         .sdmmc_cclk
		inout  wire         hps_io_sdmmc_data2,                     //                         .sdmmc_data2
		inout  wire         hps_io_sdmmc_data3,                     //                         .sdmmc_data3
		inout  wire         hps_io_sdmmc_cmd,                       //                         .sdmmc_cmd
		input  wire         hps_io_usb1_clk,                        //                         .usb1_clk
		output wire         hps_io_usb1_stp,                        //                         .usb1_stp
		input  wire         hps_io_usb1_dir,                        //                         .usb1_dir
		inout  wire         hps_io_usb1_data0,                      //                         .usb1_data0
		inout  wire         hps_io_usb1_data1,                      //                         .usb1_data1
		input  wire         hps_io_usb1_nxt,                        //                         .usb1_nxt
		inout  wire         hps_io_usb1_data2,                      //                         .usb1_data2
		inout  wire         hps_io_usb1_data3,                      //                         .usb1_data3
		inout  wire         hps_io_usb1_data4,                      //                         .usb1_data4
		inout  wire         hps_io_usb1_data5,                      //                         .usb1_data5
		inout  wire         hps_io_usb1_data6,                      //                         .usb1_data6
		inout  wire         hps_io_usb1_data7,                      //                         .usb1_data7
		output wire         hps_io_emac2_tx_clk,                    //                         .emac2_tx_clk
		output wire         hps_io_emac2_tx_ctl,                    //                         .emac2_tx_ctl
		input  wire         hps_io_emac2_rx_clk,                    //                         .emac2_rx_clk
		input  wire         hps_io_emac2_rx_ctl,                    //                         .emac2_rx_ctl
		output wire         hps_io_emac2_txd0,                      //                         .emac2_txd0
		output wire         hps_io_emac2_txd1,                      //                         .emac2_txd1
		input  wire         hps_io_emac2_rxd0,                      //                         .emac2_rxd0
		input  wire         hps_io_emac2_rxd1,                      //                         .emac2_rxd1
		output wire         hps_io_emac2_txd2,                      //                         .emac2_txd2
		output wire         hps_io_emac2_txd3,                      //                         .emac2_txd3
		input  wire         hps_io_emac2_rxd2,                      //                         .emac2_rxd2
		input  wire         hps_io_emac2_rxd3,                      //                         .emac2_rxd3
		inout  wire         hps_io_mdio2_mdio,                      //                         .mdio2_mdio
		output wire         hps_io_mdio2_mdc,                       //                         .mdio2_mdc
		output wire         hps_io_uart0_tx,                        //                         .uart0_tx
		input  wire         hps_io_uart0_rx,                        //                         .uart0_rx
		inout  wire         hps_io_i2c0_sda,                        //                         .i2c0_sda
		inout  wire         hps_io_i2c0_scl,                        //                         .i2c0_scl
		inout  wire         hps_io_gpio6,                           //                         .gpio6
		inout  wire         hps_io_gpio7,                           //                         .gpio7
		inout  wire         hps_io_gpio8,                           //                         .gpio8
		inout  wire         hps_io_gpio9,                           //                         .gpio9
		inout  wire         hps_io_gpio10,                          //                         .gpio10
		inout  wire         hps_io_gpio28,                          //                         .gpio28
		inout  wire         hps_io_gpio34,                          //                         .gpio34
		inout  wire         hps_io_gpio35,                          //                         .gpio35
		input  wire         usb31_io_vbus_det,                      //                 usb31_io.vbus_det
		input  wire         usb31_io_flt_bar,                       //                         .flt_bar
		output wire [1:0]   usb31_io_usb_ctrl,                      //                         .usb_ctrl
		input  wire         usb31_io_usb31_id,                      //                         .usb31_id
		input  wire [62:0]  fpga2hps_interrupt_irq,                 //       fpga2hps_interrupt.irq
		input  wire         usb31_phy_pma_cpu_clk_clk,              //    usb31_phy_pma_cpu_clk.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_refclk_p_clk,                 //       usb31_phy_refclk_p.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_refclk_n_clk,                 //       usb31_phy_refclk_n.clk,           The connection made from "Reference and SystemPLL Clocks IP" to this pin will guide Quartus on properly setting clock network.
		input  wire         usb31_phy_rx_serial_n_i_rx_serial_n,    //    usb31_phy_rx_serial_n.i_rx_serial_n, Differential pair for RX serial data port. Historically was hidden; however now used in pam4 signal simulation model, hence needs to be connected by user.
		input  wire         usb31_phy_rx_serial_p_i_rx_serial_p,    //    usb31_phy_rx_serial_p.i_rx_serial_p, TX serial data port.
		output wire         usb31_phy_tx_serial_n_o_tx_serial_n,    //    usb31_phy_tx_serial_n.o_tx_serial_n, Differential pair for TX serial data port. Historically was hidden; however now used in pam4 signal simulation model, hence needs to be connected by user.
		output wire         usb31_phy_tx_serial_p_o_tx_serial_p,    //    usb31_phy_tx_serial_p.o_tx_serial_p, TX serial data port.
		input  wire         usb31_phy_reconfig_rst_reset,           //   usb31_phy_reconfig_rst.reset,         reconfig_reset
		input  wire         usb31_phy_reconfig_clk_clk,             //   usb31_phy_reconfig_clk.clk,           reconfig_clk
		input  wire [20:0]  usb31_phy_reconfig_slave_address,       // usb31_phy_reconfig_slave.address,       Address for Ethernet CSRs
		input  wire [3:0]   usb31_phy_reconfig_slave_byteenable,    //                         .byteenable,    Byte enable for read/write to Ethernet CSRs
		output wire         usb31_phy_reconfig_slave_readdatavalid, //                         .readdatavalid, Read data from Ethernet CSRs is valid
		input  wire         usb31_phy_reconfig_slave_read,          //                         .read,          Read command for Ethernet CSRs
		input  wire         usb31_phy_reconfig_slave_write,         //                         .write,         Write command for Ethernet CSRs
		output wire [31:0]  usb31_phy_reconfig_slave_readdata,      //                         .readdata,      Read data from reads to Ethernet CSRs
		input  wire [31:0]  usb31_phy_reconfig_slave_writedata,     //                         .writedata,     Data for writes to Ethernet CSRs
		output wire         usb31_phy_reconfig_slave_waitrequest,   //                         .waitrequest,   AVMM stall signal for operation on Ethernet CSRs
		input  wire         f2sdram_axi_clock_clk,                  //        f2sdram_axi_clock.clk
		input  wire         f2sdram_axi_reset_reset_n,              //        f2sdram_axi_reset.reset_n
		input  wire [31:0]  f2sdram_araddr,                         //                  f2sdram.araddr
		input  wire [1:0]   f2sdram_arburst,                        //                         .arburst
		input  wire [3:0]   f2sdram_arcache,                        //                         .arcache
		input  wire [4:0]   f2sdram_arid,                           //                         .arid
		input  wire [7:0]   f2sdram_arlen,                          //                         .arlen
		input  wire         f2sdram_arlock,                         //                         .arlock
		input  wire [2:0]   f2sdram_arprot,                         //                         .arprot
		input  wire [3:0]   f2sdram_arqos,                          //                         .arqos
		output wire         f2sdram_arready,                        //                         .arready
		input  wire [2:0]   f2sdram_arsize,                         //                         .arsize
		input  wire         f2sdram_arvalid,                        //                         .arvalid
		input  wire [31:0]  f2sdram_awaddr,                         //                         .awaddr
		input  wire [1:0]   f2sdram_awburst,                        //                         .awburst
		input  wire [3:0]   f2sdram_awcache,                        //                         .awcache
		input  wire [4:0]   f2sdram_awid,                           //                         .awid
		input  wire [7:0]   f2sdram_awlen,                          //                         .awlen
		input  wire         f2sdram_awlock,                         //                         .awlock
		input  wire [2:0]   f2sdram_awprot,                         //                         .awprot
		input  wire [3:0]   f2sdram_awqos,                          //                         .awqos
		output wire         f2sdram_awready,                        //                         .awready
		input  wire [2:0]   f2sdram_awsize,                         //                         .awsize
		input  wire         f2sdram_awvalid,                        //                         .awvalid
		output wire [4:0]   f2sdram_bid,                            //                         .bid
		input  wire         f2sdram_bready,                         //                         .bready
		output wire [1:0]   f2sdram_bresp,                          //                         .bresp
		output wire         f2sdram_bvalid,                         //                         .bvalid
		output wire [63:0]  f2sdram_rdata,                          //                         .rdata
		output wire [4:0]   f2sdram_rid,                            //                         .rid
		output wire         f2sdram_rlast,                          //                         .rlast
		input  wire         f2sdram_rready,                         //                         .rready
		output wire [1:0]   f2sdram_rresp,                          //                         .rresp
		output wire         f2sdram_rvalid,                         //                         .rvalid
		input  wire [63:0]  f2sdram_wdata,                          //                         .wdata
		input  wire         f2sdram_wlast,                          //                         .wlast
		output wire         f2sdram_wready,                         //                         .wready
		input  wire [7:0]   f2sdram_wstrb,                          //                         .wstrb
		input  wire         f2sdram_wvalid,                         //                         .wvalid
		input  wire [7:0]   f2sdram_aruser,                         //                         .aruser
		input  wire [7:0]   f2sdram_awuser,                         //                         .awuser
		input  wire [7:0]   f2sdram_wuser,                          //                         .wuser
		output wire [7:0]   f2sdram_buser,                          //                         .buser
		input  wire [3:0]   f2sdram_arregion,                       //                         .arregion
		output wire [7:0]   f2sdram_ruser,                          //                         .ruser
		input  wire [3:0]   f2sdram_awregion,                       //                         .awregion
		input  wire         io96b0_csr_axi_clk_clk,                 //       io96b0_csr_axi_clk.clk
		input  wire         io96b0_csr_axi_rst_reset_n,             //       io96b0_csr_axi_rst.reset_n
		input  wire         io96b0_csr_axi_arready,                 //           io96b0_csr_axi.arready
		input  wire         io96b0_csr_axi_awready,                 //                         .awready
		input  wire [1:0]   io96b0_csr_axi_bresp,                   //                         .bresp
		input  wire         io96b0_csr_axi_bvalid,                  //                         .bvalid
		input  wire [31:0]  io96b0_csr_axi_rdata,                   //                         .rdata
		input  wire [1:0]   io96b0_csr_axi_rresp,                   //                         .rresp
		input  wire         io96b0_csr_axi_rvalid,                  //                         .rvalid
		input  wire         io96b0_csr_axi_wready,                  //                         .wready
		output wire [31:0]  io96b0_csr_axi_araddr,                  //                         .araddr
		output wire         io96b0_csr_axi_arvalid,                 //                         .arvalid
		output wire [31:0]  io96b0_csr_axi_awaddr,                  //                         .awaddr
		output wire         io96b0_csr_axi_awvalid,                 //                         .awvalid
		output wire         io96b0_csr_axi_bready,                  //                         .bready
		output wire         io96b0_csr_axi_rready,                  //                         .rready
		output wire [31:0]  io96b0_csr_axi_wdata,                   //                         .wdata
		output wire [3:0]   io96b0_csr_axi_wstrb,                   //                         .wstrb
		output wire         io96b0_csr_axi_wvalid,                  //                         .wvalid
		output wire [2:0]   io96b0_csr_axi_arprot,                  //                         .arprot
		output wire [2:0]   io96b0_csr_axi_awprot,                  //                         .awprot
		input  wire         io96b0_ch0_axi_clk_clk,                 //       io96b0_ch0_axi_clk.clk
		input  wire         io96b0_ch0_axi_rst_reset_n,             //       io96b0_ch0_axi_rst.reset_n
		input  wire         io96b0_ch0_axi_arready,                 //           io96b0_ch0_axi.arready
		input  wire         io96b0_ch0_axi_awready,                 //                         .awready
		input  wire [6:0]   io96b0_ch0_axi_bid,                     //                         .bid
		input  wire [1:0]   io96b0_ch0_axi_bresp,                   //                         .bresp
		input  wire         io96b0_ch0_axi_bvalid,                  //                         .bvalid
		input  wire [255:0] io96b0_ch0_axi_rdata,                   //                         .rdata
		input  wire [6:0]   io96b0_ch0_axi_rid,                     //                         .rid
		input  wire         io96b0_ch0_axi_rlast,                   //                         .rlast
		input  wire [1:0]   io96b0_ch0_axi_rresp,                   //                         .rresp
		input  wire [31:0]  io96b0_ch0_axi_ruser,                   //                         .ruser
		input  wire         io96b0_ch0_axi_rvalid,                  //                         .rvalid
		input  wire         io96b0_ch0_axi_wready,                  //                         .wready
		output wire [43:0]  io96b0_ch0_axi_araddr,                  //                         .araddr
		output wire [1:0]   io96b0_ch0_axi_arburst,                 //                         .arburst
		output wire [6:0]   io96b0_ch0_axi_arid,                    //                         .arid
		output wire [7:0]   io96b0_ch0_axi_arlen,                   //                         .arlen
		output wire         io96b0_ch0_axi_arlock,                  //                         .arlock
		output wire [3:0]   io96b0_ch0_axi_arqos,                   //                         .arqos
		output wire [2:0]   io96b0_ch0_axi_arsize,                  //                         .arsize
		output wire [13:0]  io96b0_ch0_axi_aruser,                  //                         .aruser
		output wire         io96b0_ch0_axi_arvalid,                 //                         .arvalid
		output wire [43:0]  io96b0_ch0_axi_awaddr,                  //                         .awaddr
		output wire [1:0]   io96b0_ch0_axi_awburst,                 //                         .awburst
		output wire [6:0]   io96b0_ch0_axi_awid,                    //                         .awid
		output wire [7:0]   io96b0_ch0_axi_awlen,                   //                         .awlen
		output wire         io96b0_ch0_axi_awlock,                  //                         .awlock
		output wire [3:0]   io96b0_ch0_axi_awqos,                   //                         .awqos
		output wire [2:0]   io96b0_ch0_axi_awsize,                  //                         .awsize
		output wire [13:0]  io96b0_ch0_axi_awuser,                  //                         .awuser
		output wire         io96b0_ch0_axi_awvalid,                 //                         .awvalid
		output wire         io96b0_ch0_axi_bready,                  //                         .bready
		output wire         io96b0_ch0_axi_rready,                  //                         .rready
		output wire [255:0] io96b0_ch0_axi_wdata,                   //                         .wdata
		output wire         io96b0_ch0_axi_wlast,                   //                         .wlast
		output wire [31:0]  io96b0_ch0_axi_wstrb,                   //                         .wstrb
		output wire [31:0]  io96b0_ch0_axi_wuser,                   //                         .wuser
		output wire         io96b0_ch0_axi_wvalid,                  //                         .wvalid
		output wire [2:0]   io96b0_ch0_axi_arprot,                  //                         .arprot
		output wire [2:0]   io96b0_ch0_axi_awprot                   //                         .awprot
	);

	ghrd_hps_system_intel_agilex_5_soc_0_intel_agilex_5_soc_200_siwuvvy intel_agilex_5_soc_0 (
		.h2f_reset_reset_n                      (h2f_reset_reset_n),                      //  output,    width = 1,                h2f_reset.reset_n
		.hps2fpga_axi_clock_clk                 (hps2fpga_axi_clock_clk),                 //   input,    width = 1,       hps2fpga_axi_clock.clk
		.hps2fpga_axi_reset_reset_n             (hps2fpga_axi_reset_reset_n),             //   input,    width = 1,       hps2fpga_axi_reset.reset_n
		.hps2fpga_awid                          (hps2fpga_awid),                          //  output,    width = 4,                 hps2fpga.awid
		.hps2fpga_awaddr                        (hps2fpga_awaddr),                        //  output,   width = 32,                         .awaddr
		.hps2fpga_awlen                         (hps2fpga_awlen),                         //  output,    width = 8,                         .awlen
		.hps2fpga_awsize                        (hps2fpga_awsize),                        //  output,    width = 3,                         .awsize
		.hps2fpga_awburst                       (hps2fpga_awburst),                       //  output,    width = 2,                         .awburst
		.hps2fpga_awlock                        (hps2fpga_awlock),                        //  output,    width = 1,                         .awlock
		.hps2fpga_awcache                       (hps2fpga_awcache),                       //  output,    width = 4,                         .awcache
		.hps2fpga_awprot                        (hps2fpga_awprot),                        //  output,    width = 3,                         .awprot
		.hps2fpga_awvalid                       (hps2fpga_awvalid),                       //  output,    width = 1,                         .awvalid
		.hps2fpga_awready                       (hps2fpga_awready),                       //   input,    width = 1,                         .awready
		.hps2fpga_wdata                         (hps2fpga_wdata),                         //  output,   width = 32,                         .wdata
		.hps2fpga_wstrb                         (hps2fpga_wstrb),                         //  output,    width = 4,                         .wstrb
		.hps2fpga_wlast                         (hps2fpga_wlast),                         //  output,    width = 1,                         .wlast
		.hps2fpga_wvalid                        (hps2fpga_wvalid),                        //  output,    width = 1,                         .wvalid
		.hps2fpga_wready                        (hps2fpga_wready),                        //   input,    width = 1,                         .wready
		.hps2fpga_bid                           (hps2fpga_bid),                           //   input,    width = 4,                         .bid
		.hps2fpga_bresp                         (hps2fpga_bresp),                         //   input,    width = 2,                         .bresp
		.hps2fpga_bvalid                        (hps2fpga_bvalid),                        //   input,    width = 1,                         .bvalid
		.hps2fpga_bready                        (hps2fpga_bready),                        //  output,    width = 1,                         .bready
		.hps2fpga_arid                          (hps2fpga_arid),                          //  output,    width = 4,                         .arid
		.hps2fpga_araddr                        (hps2fpga_araddr),                        //  output,   width = 32,                         .araddr
		.hps2fpga_arlen                         (hps2fpga_arlen),                         //  output,    width = 8,                         .arlen
		.hps2fpga_arsize                        (hps2fpga_arsize),                        //  output,    width = 3,                         .arsize
		.hps2fpga_arburst                       (hps2fpga_arburst),                       //  output,    width = 2,                         .arburst
		.hps2fpga_arlock                        (hps2fpga_arlock),                        //  output,    width = 1,                         .arlock
		.hps2fpga_arcache                       (hps2fpga_arcache),                       //  output,    width = 4,                         .arcache
		.hps2fpga_arprot                        (hps2fpga_arprot),                        //  output,    width = 3,                         .arprot
		.hps2fpga_arvalid                       (hps2fpga_arvalid),                       //  output,    width = 1,                         .arvalid
		.hps2fpga_arready                       (hps2fpga_arready),                       //   input,    width = 1,                         .arready
		.hps2fpga_rid                           (hps2fpga_rid),                           //   input,    width = 4,                         .rid
		.hps2fpga_rdata                         (hps2fpga_rdata),                         //   input,   width = 32,                         .rdata
		.hps2fpga_rresp                         (hps2fpga_rresp),                         //   input,    width = 2,                         .rresp
		.hps2fpga_rlast                         (hps2fpga_rlast),                         //   input,    width = 1,                         .rlast
		.hps2fpga_rvalid                        (hps2fpga_rvalid),                        //   input,    width = 1,                         .rvalid
		.hps2fpga_rready                        (hps2fpga_rready),                        //  output,    width = 1,                         .rready
		.lwhps2fpga_axi_clock_clk               (lwhps2fpga_axi_clock_clk),               //   input,    width = 1,     lwhps2fpga_axi_clock.clk
		.lwhps2fpga_axi_reset_reset_n           (lwhps2fpga_axi_reset_reset_n),           //   input,    width = 1,     lwhps2fpga_axi_reset.reset_n
		.lwhps2fpga_awid                        (lwhps2fpga_awid),                        //  output,    width = 4,               lwhps2fpga.awid
		.lwhps2fpga_awaddr                      (lwhps2fpga_awaddr),                      //  output,   width = 29,                         .awaddr
		.lwhps2fpga_awlen                       (lwhps2fpga_awlen),                       //  output,    width = 8,                         .awlen
		.lwhps2fpga_awsize                      (lwhps2fpga_awsize),                      //  output,    width = 3,                         .awsize
		.lwhps2fpga_awburst                     (lwhps2fpga_awburst),                     //  output,    width = 2,                         .awburst
		.lwhps2fpga_awlock                      (lwhps2fpga_awlock),                      //  output,    width = 1,                         .awlock
		.lwhps2fpga_awcache                     (lwhps2fpga_awcache),                     //  output,    width = 4,                         .awcache
		.lwhps2fpga_awprot                      (lwhps2fpga_awprot),                      //  output,    width = 3,                         .awprot
		.lwhps2fpga_awvalid                     (lwhps2fpga_awvalid),                     //  output,    width = 1,                         .awvalid
		.lwhps2fpga_awready                     (lwhps2fpga_awready),                     //   input,    width = 1,                         .awready
		.lwhps2fpga_wdata                       (lwhps2fpga_wdata),                       //  output,   width = 32,                         .wdata
		.lwhps2fpga_wstrb                       (lwhps2fpga_wstrb),                       //  output,    width = 4,                         .wstrb
		.lwhps2fpga_wlast                       (lwhps2fpga_wlast),                       //  output,    width = 1,                         .wlast
		.lwhps2fpga_wvalid                      (lwhps2fpga_wvalid),                      //  output,    width = 1,                         .wvalid
		.lwhps2fpga_wready                      (lwhps2fpga_wready),                      //   input,    width = 1,                         .wready
		.lwhps2fpga_bid                         (lwhps2fpga_bid),                         //   input,    width = 4,                         .bid
		.lwhps2fpga_bresp                       (lwhps2fpga_bresp),                       //   input,    width = 2,                         .bresp
		.lwhps2fpga_bvalid                      (lwhps2fpga_bvalid),                      //   input,    width = 1,                         .bvalid
		.lwhps2fpga_bready                      (lwhps2fpga_bready),                      //  output,    width = 1,                         .bready
		.lwhps2fpga_arid                        (lwhps2fpga_arid),                        //  output,    width = 4,                         .arid
		.lwhps2fpga_araddr                      (lwhps2fpga_araddr),                      //  output,   width = 29,                         .araddr
		.lwhps2fpga_arlen                       (lwhps2fpga_arlen),                       //  output,    width = 8,                         .arlen
		.lwhps2fpga_arsize                      (lwhps2fpga_arsize),                      //  output,    width = 3,                         .arsize
		.lwhps2fpga_arburst                     (lwhps2fpga_arburst),                     //  output,    width = 2,                         .arburst
		.lwhps2fpga_arlock                      (lwhps2fpga_arlock),                      //  output,    width = 1,                         .arlock
		.lwhps2fpga_arcache                     (lwhps2fpga_arcache),                     //  output,    width = 4,                         .arcache
		.lwhps2fpga_arprot                      (lwhps2fpga_arprot),                      //  output,    width = 3,                         .arprot
		.lwhps2fpga_arvalid                     (lwhps2fpga_arvalid),                     //  output,    width = 1,                         .arvalid
		.lwhps2fpga_arready                     (lwhps2fpga_arready),                     //   input,    width = 1,                         .arready
		.lwhps2fpga_rid                         (lwhps2fpga_rid),                         //   input,    width = 4,                         .rid
		.lwhps2fpga_rdata                       (lwhps2fpga_rdata),                       //   input,   width = 32,                         .rdata
		.lwhps2fpga_rresp                       (lwhps2fpga_rresp),                       //   input,    width = 2,                         .rresp
		.lwhps2fpga_rlast                       (lwhps2fpga_rlast),                       //   input,    width = 1,                         .rlast
		.lwhps2fpga_rvalid                      (lwhps2fpga_rvalid),                      //   input,    width = 1,                         .rvalid
		.lwhps2fpga_rready                      (lwhps2fpga_rready),                      //  output,    width = 1,                         .rready
		.emac_ptp_clk_clk                       (emac_ptp_clk_clk),                       //   input,    width = 1,             emac_ptp_clk.clk
		.emac_timestamp_clk_clk                 (emac_timestamp_clk_clk),                 //   input,    width = 1,       emac_timestamp_clk.clk
		.emac_timestamp_data_data_in            (emac_timestamp_data_data_in),            //   input,   width = 64,      emac_timestamp_data.data_in
		.emac0_mdio_mac_mdc                     (emac0_mdio_mac_mdc),                     //  output,    width = 1,               emac0_mdio.mac_mdc
		.emac0_mdio_mac_mdi                     (emac0_mdio_mac_mdi),                     //   input,    width = 1,                         .mac_mdi
		.emac0_mdio_mac_mdo                     (emac0_mdio_mac_mdo),                     //  output,    width = 1,                         .mac_mdo
		.emac0_mdio_mac_mdoe                    (emac0_mdio_mac_mdoe),                    //  output,    width = 1,                         .mac_mdoe
		.emac0_app_rst_reset_n                  (emac0_app_rst_reset_n),                  //  output,    width = 1,            emac0_app_rst.reset_n
		.emac0_mac_tx_clk_o                     (emac0_mac_tx_clk_o),                     //  output,    width = 1,                    emac0.mac_tx_clk_o
		.emac0_mac_tx_clk_i                     (emac0_mac_tx_clk_i),                     //   input,    width = 1,                         .mac_tx_clk_i
		.emac0_mac_rx_clk                       (emac0_mac_rx_clk),                       //   input,    width = 1,                         .mac_rx_clk
		.emac0_mac_rst_tx_n                     (emac0_mac_rst_tx_n),                     //  output,    width = 1,                         .mac_rst_tx_n
		.emac0_mac_rst_rx_n                     (emac0_mac_rst_rx_n),                     //  output,    width = 1,                         .mac_rst_rx_n
		.emac0_mac_txen                         (emac0_mac_txen),                         //  output,    width = 1,                         .mac_txen
		.emac0_mac_txer                         (emac0_mac_txer),                         //  output,    width = 1,                         .mac_txer
		.emac0_mac_rxdv                         (emac0_mac_rxdv),                         //   input,    width = 1,                         .mac_rxdv
		.emac0_mac_rxer                         (emac0_mac_rxer),                         //   input,    width = 1,                         .mac_rxer
		.emac0_mac_rxd                          (emac0_mac_rxd),                          //   input,    width = 8,                         .mac_rxd
		.emac0_mac_col                          (emac0_mac_col),                          //   input,    width = 1,                         .mac_col
		.emac0_mac_crs                          (emac0_mac_crs),                          //   input,    width = 1,                         .mac_crs
		.emac0_mac_speed                        (emac0_mac_speed),                        //  output,    width = 3,                         .mac_speed
		.emac0_mac_txd_o                        (emac0_mac_txd_o),                        //  output,    width = 8,                         .mac_txd_o
		.emac2_app_rst_reset_n                  (emac2_app_rst_reset_n),                  //  output,    width = 1,            emac2_app_rst.reset_n
		.spim0_miso_i                           (spim0_miso_i),                           //   input,    width = 1,                    spim0.miso_i
		.spim0_mosi_o                           (spim0_mosi_o),                           //  output,    width = 1,                         .mosi_o
		.spim0_mosi_oe                          (spim0_mosi_oe),                          //  output,    width = 1,                         .mosi_oe
		.spim0_ss_in_n                          (spim0_ss_in_n),                          //   input,    width = 1,                         .ss_in_n
		.spim0_ss0_n_o                          (spim0_ss0_n_o),                          //  output,    width = 1,                         .ss0_n_o
		.spim0_ss1_n_o                          (spim0_ss1_n_o),                          //  output,    width = 1,                         .ss1_n_o
		.spim0_ss2_n_o                          (spim0_ss2_n_o),                          //  output,    width = 1,                         .ss2_n_o
		.spim0_ss3_n_o                          (spim0_ss3_n_o),                          //  output,    width = 1,                         .ss3_n_o
		.spim0_sclk_out_clk                     (spim0_sclk_out_clk),                     //  output,    width = 1,           spim0_sclk_out.clk
		.I2C1_scl_i_clk                         (I2C1_scl_i_clk),                         //   input,    width = 1,               I2C1_scl_i.clk
		.I2C1_scl_oe_clk                        (I2C1_scl_oe_clk),                        //  output,    width = 1,              I2C1_scl_oe.clk
		.I2C1_sda_i                             (I2C1_sda_i),                             //   input,    width = 1,                     I2C1.sda_i
		.I2C1_sda_oe                            (I2C1_sda_oe),                            //  output,    width = 1,                         .sda_oe
		.h2f_user0_clk_clk                      (h2f_user0_clk_clk),                      //  output,    width = 1,            h2f_user0_clk.clk
		.h2f_user1_clk_clk                      (h2f_user1_clk_clk),                      //  output,    width = 1,            h2f_user1_clk.clk
		.h2f_warm_reset_handshake_reset_req     (h2f_warm_reset_handshake_reset_req),     //  output,    width = 1, h2f_warm_reset_handshake.reset_req
		.h2f_warm_reset_handshake_reset_ack     (h2f_warm_reset_handshake_reset_ack),     //   input,    width = 1,                         .reset_ack
		.h2f_cold_reset_reset_n                 (h2f_cold_reset_reset_n),                 //  output,    width = 1,           h2f_cold_reset.reset_n
		.hps_io_hps_osc_clk                     (hps_io_hps_osc_clk),                     //   input,    width = 1,                   hps_io.hps_osc_clk
		.hps_io_sdmmc_data0                     (hps_io_sdmmc_data0),                     //   inout,    width = 1,                         .sdmmc_data0
		.hps_io_sdmmc_data1                     (hps_io_sdmmc_data1),                     //   inout,    width = 1,                         .sdmmc_data1
		.hps_io_sdmmc_cclk                      (hps_io_sdmmc_cclk),                      //  output,    width = 1,                         .sdmmc_cclk
		.hps_io_sdmmc_data2                     (hps_io_sdmmc_data2),                     //   inout,    width = 1,                         .sdmmc_data2
		.hps_io_sdmmc_data3                     (hps_io_sdmmc_data3),                     //   inout,    width = 1,                         .sdmmc_data3
		.hps_io_sdmmc_cmd                       (hps_io_sdmmc_cmd),                       //   inout,    width = 1,                         .sdmmc_cmd
		.hps_io_usb1_clk                        (hps_io_usb1_clk),                        //   input,    width = 1,                         .usb1_clk
		.hps_io_usb1_stp                        (hps_io_usb1_stp),                        //  output,    width = 1,                         .usb1_stp
		.hps_io_usb1_dir                        (hps_io_usb1_dir),                        //   input,    width = 1,                         .usb1_dir
		.hps_io_usb1_data0                      (hps_io_usb1_data0),                      //   inout,    width = 1,                         .usb1_data0
		.hps_io_usb1_data1                      (hps_io_usb1_data1),                      //   inout,    width = 1,                         .usb1_data1
		.hps_io_usb1_nxt                        (hps_io_usb1_nxt),                        //   input,    width = 1,                         .usb1_nxt
		.hps_io_usb1_data2                      (hps_io_usb1_data2),                      //   inout,    width = 1,                         .usb1_data2
		.hps_io_usb1_data3                      (hps_io_usb1_data3),                      //   inout,    width = 1,                         .usb1_data3
		.hps_io_usb1_data4                      (hps_io_usb1_data4),                      //   inout,    width = 1,                         .usb1_data4
		.hps_io_usb1_data5                      (hps_io_usb1_data5),                      //   inout,    width = 1,                         .usb1_data5
		.hps_io_usb1_data6                      (hps_io_usb1_data6),                      //   inout,    width = 1,                         .usb1_data6
		.hps_io_usb1_data7                      (hps_io_usb1_data7),                      //   inout,    width = 1,                         .usb1_data7
		.hps_io_emac2_tx_clk                    (hps_io_emac2_tx_clk),                    //  output,    width = 1,                         .emac2_tx_clk
		.hps_io_emac2_tx_ctl                    (hps_io_emac2_tx_ctl),                    //  output,    width = 1,                         .emac2_tx_ctl
		.hps_io_emac2_rx_clk                    (hps_io_emac2_rx_clk),                    //   input,    width = 1,                         .emac2_rx_clk
		.hps_io_emac2_rx_ctl                    (hps_io_emac2_rx_ctl),                    //   input,    width = 1,                         .emac2_rx_ctl
		.hps_io_emac2_txd0                      (hps_io_emac2_txd0),                      //  output,    width = 1,                         .emac2_txd0
		.hps_io_emac2_txd1                      (hps_io_emac2_txd1),                      //  output,    width = 1,                         .emac2_txd1
		.hps_io_emac2_rxd0                      (hps_io_emac2_rxd0),                      //   input,    width = 1,                         .emac2_rxd0
		.hps_io_emac2_rxd1                      (hps_io_emac2_rxd1),                      //   input,    width = 1,                         .emac2_rxd1
		.hps_io_emac2_txd2                      (hps_io_emac2_txd2),                      //  output,    width = 1,                         .emac2_txd2
		.hps_io_emac2_txd3                      (hps_io_emac2_txd3),                      //  output,    width = 1,                         .emac2_txd3
		.hps_io_emac2_rxd2                      (hps_io_emac2_rxd2),                      //   input,    width = 1,                         .emac2_rxd2
		.hps_io_emac2_rxd3                      (hps_io_emac2_rxd3),                      //   input,    width = 1,                         .emac2_rxd3
		.hps_io_mdio2_mdio                      (hps_io_mdio2_mdio),                      //   inout,    width = 1,                         .mdio2_mdio
		.hps_io_mdio2_mdc                       (hps_io_mdio2_mdc),                       //  output,    width = 1,                         .mdio2_mdc
		.hps_io_uart0_tx                        (hps_io_uart0_tx),                        //  output,    width = 1,                         .uart0_tx
		.hps_io_uart0_rx                        (hps_io_uart0_rx),                        //   input,    width = 1,                         .uart0_rx
		.hps_io_i2c0_sda                        (hps_io_i2c0_sda),                        //   inout,    width = 1,                         .i2c0_sda
		.hps_io_i2c0_scl                        (hps_io_i2c0_scl),                        //   inout,    width = 1,                         .i2c0_scl
		.hps_io_gpio6                           (hps_io_gpio6),                           //   inout,    width = 1,                         .gpio6
		.hps_io_gpio7                           (hps_io_gpio7),                           //   inout,    width = 1,                         .gpio7
		.hps_io_gpio8                           (hps_io_gpio8),                           //   inout,    width = 1,                         .gpio8
		.hps_io_gpio9                           (hps_io_gpio9),                           //   inout,    width = 1,                         .gpio9
		.hps_io_gpio10                          (hps_io_gpio10),                          //   inout,    width = 1,                         .gpio10
		.hps_io_gpio28                          (hps_io_gpio28),                          //   inout,    width = 1,                         .gpio28
		.hps_io_gpio34                          (hps_io_gpio34),                          //   inout,    width = 1,                         .gpio34
		.hps_io_gpio35                          (hps_io_gpio35),                          //   inout,    width = 1,                         .gpio35
		.usb31_io_vbus_det                      (usb31_io_vbus_det),                      //   input,    width = 1,                 usb31_io.vbus_det
		.usb31_io_flt_bar                       (usb31_io_flt_bar),                       //   input,    width = 1,                         .flt_bar
		.usb31_io_usb_ctrl                      (usb31_io_usb_ctrl),                      //  output,    width = 2,                         .usb_ctrl
		.usb31_io_usb31_id                      (usb31_io_usb31_id),                      //   input,    width = 1,                         .usb31_id
		.fpga2hps_interrupt_irq                 (fpga2hps_interrupt_irq),                 //   input,   width = 63,       fpga2hps_interrupt.irq
		.usb31_phy_pma_cpu_clk_clk              (usb31_phy_pma_cpu_clk_clk),              //   input,    width = 1,    usb31_phy_pma_cpu_clk.clk
		.usb31_phy_refclk_p_clk                 (usb31_phy_refclk_p_clk),                 //   input,    width = 1,       usb31_phy_refclk_p.clk
		.usb31_phy_refclk_n_clk                 (usb31_phy_refclk_n_clk),                 //   input,    width = 1,       usb31_phy_refclk_n.clk
		.usb31_phy_rx_serial_n_i_rx_serial_n    (usb31_phy_rx_serial_n_i_rx_serial_n),    //   input,    width = 1,    usb31_phy_rx_serial_n.i_rx_serial_n
		.usb31_phy_rx_serial_p_i_rx_serial_p    (usb31_phy_rx_serial_p_i_rx_serial_p),    //   input,    width = 1,    usb31_phy_rx_serial_p.i_rx_serial_p
		.usb31_phy_tx_serial_n_o_tx_serial_n    (usb31_phy_tx_serial_n_o_tx_serial_n),    //  output,    width = 1,    usb31_phy_tx_serial_n.o_tx_serial_n
		.usb31_phy_tx_serial_p_o_tx_serial_p    (usb31_phy_tx_serial_p_o_tx_serial_p),    //  output,    width = 1,    usb31_phy_tx_serial_p.o_tx_serial_p
		.usb31_phy_reconfig_rst_reset           (usb31_phy_reconfig_rst_reset),           //   input,    width = 1,   usb31_phy_reconfig_rst.reset
		.usb31_phy_reconfig_clk_clk             (usb31_phy_reconfig_clk_clk),             //   input,    width = 1,   usb31_phy_reconfig_clk.clk
		.usb31_phy_reconfig_slave_address       (usb31_phy_reconfig_slave_address),       //   input,   width = 21, usb31_phy_reconfig_slave.address
		.usb31_phy_reconfig_slave_byteenable    (usb31_phy_reconfig_slave_byteenable),    //   input,    width = 4,                         .byteenable
		.usb31_phy_reconfig_slave_readdatavalid (usb31_phy_reconfig_slave_readdatavalid), //  output,    width = 1,                         .readdatavalid
		.usb31_phy_reconfig_slave_read          (usb31_phy_reconfig_slave_read),          //   input,    width = 1,                         .read
		.usb31_phy_reconfig_slave_write         (usb31_phy_reconfig_slave_write),         //   input,    width = 1,                         .write
		.usb31_phy_reconfig_slave_readdata      (usb31_phy_reconfig_slave_readdata),      //  output,   width = 32,                         .readdata
		.usb31_phy_reconfig_slave_writedata     (usb31_phy_reconfig_slave_writedata),     //   input,   width = 32,                         .writedata
		.usb31_phy_reconfig_slave_waitrequest   (usb31_phy_reconfig_slave_waitrequest),   //  output,    width = 1,                         .waitrequest
		.f2sdram_axi_clock_clk                  (f2sdram_axi_clock_clk),                  //   input,    width = 1,        f2sdram_axi_clock.clk
		.f2sdram_axi_reset_reset_n              (f2sdram_axi_reset_reset_n),              //   input,    width = 1,        f2sdram_axi_reset.reset_n
		.f2sdram_araddr                         (f2sdram_araddr),                         //   input,   width = 32,                  f2sdram.araddr
		.f2sdram_arburst                        (f2sdram_arburst),                        //   input,    width = 2,                         .arburst
		.f2sdram_arcache                        (f2sdram_arcache),                        //   input,    width = 4,                         .arcache
		.f2sdram_arid                           (f2sdram_arid),                           //   input,    width = 5,                         .arid
		.f2sdram_arlen                          (f2sdram_arlen),                          //   input,    width = 8,                         .arlen
		.f2sdram_arlock                         (f2sdram_arlock),                         //   input,    width = 1,                         .arlock
		.f2sdram_arprot                         (f2sdram_arprot),                         //   input,    width = 3,                         .arprot
		.f2sdram_arqos                          (f2sdram_arqos),                          //   input,    width = 4,                         .arqos
		.f2sdram_arready                        (f2sdram_arready),                        //  output,    width = 1,                         .arready
		.f2sdram_arsize                         (f2sdram_arsize),                         //   input,    width = 3,                         .arsize
		.f2sdram_arvalid                        (f2sdram_arvalid),                        //   input,    width = 1,                         .arvalid
		.f2sdram_awaddr                         (f2sdram_awaddr),                         //   input,   width = 32,                         .awaddr
		.f2sdram_awburst                        (f2sdram_awburst),                        //   input,    width = 2,                         .awburst
		.f2sdram_awcache                        (f2sdram_awcache),                        //   input,    width = 4,                         .awcache
		.f2sdram_awid                           (f2sdram_awid),                           //   input,    width = 5,                         .awid
		.f2sdram_awlen                          (f2sdram_awlen),                          //   input,    width = 8,                         .awlen
		.f2sdram_awlock                         (f2sdram_awlock),                         //   input,    width = 1,                         .awlock
		.f2sdram_awprot                         (f2sdram_awprot),                         //   input,    width = 3,                         .awprot
		.f2sdram_awqos                          (f2sdram_awqos),                          //   input,    width = 4,                         .awqos
		.f2sdram_awready                        (f2sdram_awready),                        //  output,    width = 1,                         .awready
		.f2sdram_awsize                         (f2sdram_awsize),                         //   input,    width = 3,                         .awsize
		.f2sdram_awvalid                        (f2sdram_awvalid),                        //   input,    width = 1,                         .awvalid
		.f2sdram_bid                            (f2sdram_bid),                            //  output,    width = 5,                         .bid
		.f2sdram_bready                         (f2sdram_bready),                         //   input,    width = 1,                         .bready
		.f2sdram_bresp                          (f2sdram_bresp),                          //  output,    width = 2,                         .bresp
		.f2sdram_bvalid                         (f2sdram_bvalid),                         //  output,    width = 1,                         .bvalid
		.f2sdram_rdata                          (f2sdram_rdata),                          //  output,   width = 64,                         .rdata
		.f2sdram_rid                            (f2sdram_rid),                            //  output,    width = 5,                         .rid
		.f2sdram_rlast                          (f2sdram_rlast),                          //  output,    width = 1,                         .rlast
		.f2sdram_rready                         (f2sdram_rready),                         //   input,    width = 1,                         .rready
		.f2sdram_rresp                          (f2sdram_rresp),                          //  output,    width = 2,                         .rresp
		.f2sdram_rvalid                         (f2sdram_rvalid),                         //  output,    width = 1,                         .rvalid
		.f2sdram_wdata                          (f2sdram_wdata),                          //   input,   width = 64,                         .wdata
		.f2sdram_wlast                          (f2sdram_wlast),                          //   input,    width = 1,                         .wlast
		.f2sdram_wready                         (f2sdram_wready),                         //  output,    width = 1,                         .wready
		.f2sdram_wstrb                          (f2sdram_wstrb),                          //   input,    width = 8,                         .wstrb
		.f2sdram_wvalid                         (f2sdram_wvalid),                         //   input,    width = 1,                         .wvalid
		.f2sdram_aruser                         (f2sdram_aruser),                         //   input,    width = 8,                         .aruser
		.f2sdram_awuser                         (f2sdram_awuser),                         //   input,    width = 8,                         .awuser
		.f2sdram_wuser                          (f2sdram_wuser),                          //   input,    width = 8,                         .wuser
		.f2sdram_buser                          (f2sdram_buser),                          //  output,    width = 8,                         .buser
		.f2sdram_arregion                       (f2sdram_arregion),                       //   input,    width = 4,                         .arregion
		.f2sdram_ruser                          (f2sdram_ruser),                          //  output,    width = 8,                         .ruser
		.f2sdram_awregion                       (f2sdram_awregion),                       //   input,    width = 4,                         .awregion
		.io96b0_csr_axi_clk_clk                 (io96b0_csr_axi_clk_clk),                 //   input,    width = 1,       io96b0_csr_axi_clk.clk
		.io96b0_csr_axi_rst_reset_n             (io96b0_csr_axi_rst_reset_n),             //   input,    width = 1,       io96b0_csr_axi_rst.reset_n
		.io96b0_csr_axi_arready                 (io96b0_csr_axi_arready),                 //   input,    width = 1,           io96b0_csr_axi.arready
		.io96b0_csr_axi_awready                 (io96b0_csr_axi_awready),                 //   input,    width = 1,                         .awready
		.io96b0_csr_axi_bresp                   (io96b0_csr_axi_bresp),                   //   input,    width = 2,                         .bresp
		.io96b0_csr_axi_bvalid                  (io96b0_csr_axi_bvalid),                  //   input,    width = 1,                         .bvalid
		.io96b0_csr_axi_rdata                   (io96b0_csr_axi_rdata),                   //   input,   width = 32,                         .rdata
		.io96b0_csr_axi_rresp                   (io96b0_csr_axi_rresp),                   //   input,    width = 2,                         .rresp
		.io96b0_csr_axi_rvalid                  (io96b0_csr_axi_rvalid),                  //   input,    width = 1,                         .rvalid
		.io96b0_csr_axi_wready                  (io96b0_csr_axi_wready),                  //   input,    width = 1,                         .wready
		.io96b0_csr_axi_araddr                  (io96b0_csr_axi_araddr),                  //  output,   width = 32,                         .araddr
		.io96b0_csr_axi_arvalid                 (io96b0_csr_axi_arvalid),                 //  output,    width = 1,                         .arvalid
		.io96b0_csr_axi_awaddr                  (io96b0_csr_axi_awaddr),                  //  output,   width = 32,                         .awaddr
		.io96b0_csr_axi_awvalid                 (io96b0_csr_axi_awvalid),                 //  output,    width = 1,                         .awvalid
		.io96b0_csr_axi_bready                  (io96b0_csr_axi_bready),                  //  output,    width = 1,                         .bready
		.io96b0_csr_axi_rready                  (io96b0_csr_axi_rready),                  //  output,    width = 1,                         .rready
		.io96b0_csr_axi_wdata                   (io96b0_csr_axi_wdata),                   //  output,   width = 32,                         .wdata
		.io96b0_csr_axi_wstrb                   (io96b0_csr_axi_wstrb),                   //  output,    width = 4,                         .wstrb
		.io96b0_csr_axi_wvalid                  (io96b0_csr_axi_wvalid),                  //  output,    width = 1,                         .wvalid
		.io96b0_csr_axi_arprot                  (io96b0_csr_axi_arprot),                  //  output,    width = 3,                         .arprot
		.io96b0_csr_axi_awprot                  (io96b0_csr_axi_awprot),                  //  output,    width = 3,                         .awprot
		.io96b0_ch0_axi_clk_clk                 (io96b0_ch0_axi_clk_clk),                 //   input,    width = 1,       io96b0_ch0_axi_clk.clk
		.io96b0_ch0_axi_rst_reset_n             (io96b0_ch0_axi_rst_reset_n),             //   input,    width = 1,       io96b0_ch0_axi_rst.reset_n
		.io96b0_ch0_axi_arready                 (io96b0_ch0_axi_arready),                 //   input,    width = 1,           io96b0_ch0_axi.arready
		.io96b0_ch0_axi_awready                 (io96b0_ch0_axi_awready),                 //   input,    width = 1,                         .awready
		.io96b0_ch0_axi_bid                     (io96b0_ch0_axi_bid),                     //   input,    width = 7,                         .bid
		.io96b0_ch0_axi_bresp                   (io96b0_ch0_axi_bresp),                   //   input,    width = 2,                         .bresp
		.io96b0_ch0_axi_bvalid                  (io96b0_ch0_axi_bvalid),                  //   input,    width = 1,                         .bvalid
		.io96b0_ch0_axi_rdata                   (io96b0_ch0_axi_rdata),                   //   input,  width = 256,                         .rdata
		.io96b0_ch0_axi_rid                     (io96b0_ch0_axi_rid),                     //   input,    width = 7,                         .rid
		.io96b0_ch0_axi_rlast                   (io96b0_ch0_axi_rlast),                   //   input,    width = 1,                         .rlast
		.io96b0_ch0_axi_rresp                   (io96b0_ch0_axi_rresp),                   //   input,    width = 2,                         .rresp
		.io96b0_ch0_axi_ruser                   (io96b0_ch0_axi_ruser),                   //   input,   width = 32,                         .ruser
		.io96b0_ch0_axi_rvalid                  (io96b0_ch0_axi_rvalid),                  //   input,    width = 1,                         .rvalid
		.io96b0_ch0_axi_wready                  (io96b0_ch0_axi_wready),                  //   input,    width = 1,                         .wready
		.io96b0_ch0_axi_araddr                  (io96b0_ch0_axi_araddr),                  //  output,   width = 44,                         .araddr
		.io96b0_ch0_axi_arburst                 (io96b0_ch0_axi_arburst),                 //  output,    width = 2,                         .arburst
		.io96b0_ch0_axi_arid                    (io96b0_ch0_axi_arid),                    //  output,    width = 7,                         .arid
		.io96b0_ch0_axi_arlen                   (io96b0_ch0_axi_arlen),                   //  output,    width = 8,                         .arlen
		.io96b0_ch0_axi_arlock                  (io96b0_ch0_axi_arlock),                  //  output,    width = 1,                         .arlock
		.io96b0_ch0_axi_arqos                   (io96b0_ch0_axi_arqos),                   //  output,    width = 4,                         .arqos
		.io96b0_ch0_axi_arsize                  (io96b0_ch0_axi_arsize),                  //  output,    width = 3,                         .arsize
		.io96b0_ch0_axi_aruser                  (io96b0_ch0_axi_aruser),                  //  output,   width = 14,                         .aruser
		.io96b0_ch0_axi_arvalid                 (io96b0_ch0_axi_arvalid),                 //  output,    width = 1,                         .arvalid
		.io96b0_ch0_axi_awaddr                  (io96b0_ch0_axi_awaddr),                  //  output,   width = 44,                         .awaddr
		.io96b0_ch0_axi_awburst                 (io96b0_ch0_axi_awburst),                 //  output,    width = 2,                         .awburst
		.io96b0_ch0_axi_awid                    (io96b0_ch0_axi_awid),                    //  output,    width = 7,                         .awid
		.io96b0_ch0_axi_awlen                   (io96b0_ch0_axi_awlen),                   //  output,    width = 8,                         .awlen
		.io96b0_ch0_axi_awlock                  (io96b0_ch0_axi_awlock),                  //  output,    width = 1,                         .awlock
		.io96b0_ch0_axi_awqos                   (io96b0_ch0_axi_awqos),                   //  output,    width = 4,                         .awqos
		.io96b0_ch0_axi_awsize                  (io96b0_ch0_axi_awsize),                  //  output,    width = 3,                         .awsize
		.io96b0_ch0_axi_awuser                  (io96b0_ch0_axi_awuser),                  //  output,   width = 14,                         .awuser
		.io96b0_ch0_axi_awvalid                 (io96b0_ch0_axi_awvalid),                 //  output,    width = 1,                         .awvalid
		.io96b0_ch0_axi_bready                  (io96b0_ch0_axi_bready),                  //  output,    width = 1,                         .bready
		.io96b0_ch0_axi_rready                  (io96b0_ch0_axi_rready),                  //  output,    width = 1,                         .rready
		.io96b0_ch0_axi_wdata                   (io96b0_ch0_axi_wdata),                   //  output,  width = 256,                         .wdata
		.io96b0_ch0_axi_wlast                   (io96b0_ch0_axi_wlast),                   //  output,    width = 1,                         .wlast
		.io96b0_ch0_axi_wstrb                   (io96b0_ch0_axi_wstrb),                   //  output,   width = 32,                         .wstrb
		.io96b0_ch0_axi_wuser                   (io96b0_ch0_axi_wuser),                   //  output,   width = 32,                         .wuser
		.io96b0_ch0_axi_wvalid                  (io96b0_ch0_axi_wvalid),                  //  output,    width = 1,                         .wvalid
		.io96b0_ch0_axi_arprot                  (io96b0_ch0_axi_arprot),                  //  output,    width = 3,                         .arprot
		.io96b0_ch0_axi_awprot                  (io96b0_ch0_axi_awprot)                   //  output,    width = 3,                         .awprot
	);

endmodule
