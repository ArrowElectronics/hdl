// gmii2rgmii.v

// Generated using ACDS version 23.4 79

`timescale 1 ps / 1 ps
module gmii2rgmii (
		input  wire       hps_gmii_mac_tx_clk_o,     //           hps_gmii.mac_tx_clk_o
		input  wire       hps_gmii_mac_rst_tx_n,     //                   .mac_rst_tx_n
		input  wire       hps_gmii_mac_rst_rx_n,     //                   .mac_rst_rx_n
		input  wire [7:0] hps_gmii_mac_txd_o,        //                   .mac_txd_o
		input  wire       hps_gmii_mac_txen,         //                   .mac_txen
		input  wire       hps_gmii_mac_txer,         //                   .mac_txer
		input  wire [2:0] hps_gmii_mac_speed,        //                   .mac_speed
		output wire       hps_gmii_mac_tx_clk_i,     //                   .mac_tx_clk_i
		output wire       hps_gmii_mac_rx_clk,       //                   .mac_rx_clk
		output wire       hps_gmii_mac_rxdv,         //                   .mac_rxdv
		output wire       hps_gmii_mac_rxer,         //                   .mac_rxer
		output wire [7:0] hps_gmii_mac_rxd,          //                   .mac_rxd
		output wire       hps_gmii_mac_col,          //                   .mac_col
		output wire       hps_gmii_mac_crs,          //                   .mac_crs
		input  wire       phy_rgmii_rgmii_rx_clk,    //          phy_rgmii.rgmii_rx_clk
		input  wire [3:0] phy_rgmii_rgmii_rxd,       //                   .rgmii_rxd
		input  wire       phy_rgmii_rgmii_rx_ctl,    //                   .rgmii_rx_ctl
		output wire       phy_rgmii_rgmii_tx_clk,    //                   .rgmii_tx_clk
		output wire [3:0] phy_rgmii_rgmii_txd,       //                   .rgmii_txd
		output wire       phy_rgmii_rgmii_tx_ctl,    //                   .rgmii_tx_ctl
		input  wire       pll_250m_tx_clock_clk,     //  pll_250m_tx_clock.clk
		input  wire       pll_125m_tx_clock_clk,     //  pll_125m_tx_clock.clk
		input  wire       pll_25m_clock_clk,         //      pll_25m_clock.clk
		input  wire       pll_2_5m_clock_clk,        //     pll_2_5m_clock.clk
		input  wire       locked_pll_250m_tx_export, // locked_pll_250m_tx.export
		input  wire       peri_reset_reset,          //         peri_reset.reset
		input  wire       peri_clock_clk             //         peri_clock.clk
	);

	gmii2rgmii_intel_gmii_to_rgmii_converter_110_k66aagy #(
		.TX_PIPELINE_DEPTH (1),
		.RX_PIPELINE_DEPTH (1),
		.ADVANCED_MODE     (0)
	) intel_gmii_to_rgmii_converter_0 (
		.hps_gmii_mac_tx_clk_o     (hps_gmii_mac_tx_clk_o),     //   input,  width = 1,           hps_gmii.mac_tx_clk_o
		.hps_gmii_mac_rst_tx_n     (hps_gmii_mac_rst_tx_n),     //   input,  width = 1,                   .mac_rst_tx_n
		.hps_gmii_mac_rst_rx_n     (hps_gmii_mac_rst_rx_n),     //   input,  width = 1,                   .mac_rst_rx_n
		.hps_gmii_mac_txd_o        (hps_gmii_mac_txd_o),        //   input,  width = 8,                   .mac_txd_o
		.hps_gmii_mac_txen         (hps_gmii_mac_txen),         //   input,  width = 1,                   .mac_txen
		.hps_gmii_mac_txer         (hps_gmii_mac_txer),         //   input,  width = 1,                   .mac_txer
		.hps_gmii_mac_speed        (hps_gmii_mac_speed),        //   input,  width = 3,                   .mac_speed
		.hps_gmii_mac_tx_clk_i     (hps_gmii_mac_tx_clk_i),     //  output,  width = 1,                   .mac_tx_clk_i
		.hps_gmii_mac_rx_clk       (hps_gmii_mac_rx_clk),       //  output,  width = 1,                   .mac_rx_clk
		.hps_gmii_mac_rxdv         (hps_gmii_mac_rxdv),         //  output,  width = 1,                   .mac_rxdv
		.hps_gmii_mac_rxer         (hps_gmii_mac_rxer),         //  output,  width = 1,                   .mac_rxer
		.hps_gmii_mac_rxd          (hps_gmii_mac_rxd),          //  output,  width = 8,                   .mac_rxd
		.hps_gmii_mac_col          (hps_gmii_mac_col),          //  output,  width = 1,                   .mac_col
		.hps_gmii_mac_crs          (hps_gmii_mac_crs),          //  output,  width = 1,                   .mac_crs
		.phy_rgmii_rgmii_rx_clk    (phy_rgmii_rgmii_rx_clk),    //   input,  width = 1,          phy_rgmii.rgmii_rx_clk
		.phy_rgmii_rgmii_rxd       (phy_rgmii_rgmii_rxd),       //   input,  width = 4,                   .rgmii_rxd
		.phy_rgmii_rgmii_rx_ctl    (phy_rgmii_rgmii_rx_ctl),    //   input,  width = 1,                   .rgmii_rx_ctl
		.phy_rgmii_rgmii_tx_clk    (phy_rgmii_rgmii_tx_clk),    //  output,  width = 1,                   .rgmii_tx_clk
		.phy_rgmii_rgmii_txd       (phy_rgmii_rgmii_txd),       //  output,  width = 4,                   .rgmii_txd
		.phy_rgmii_rgmii_tx_ctl    (phy_rgmii_rgmii_tx_ctl),    //  output,  width = 1,                   .rgmii_tx_ctl
		.pll_250m_tx_clock_clk     (pll_250m_tx_clock_clk),     //   input,  width = 1,  pll_250m_tx_clock.clk
		.pll_125m_tx_clock_clk     (pll_125m_tx_clock_clk),     //   input,  width = 1,  pll_125m_tx_clock.clk
		.pll_25m_clock_clk         (pll_25m_clock_clk),         //   input,  width = 1,      pll_25m_clock.clk
		.pll_2_5m_clock_clk        (pll_2_5m_clock_clk),        //   input,  width = 1,     pll_2_5m_clock.clk
		.locked_pll_250m_tx_export (locked_pll_250m_tx_export), //   input,  width = 1, locked_pll_250m_tx.export
		.peri_reset_reset          (peri_reset_reset),          //   input,  width = 1,         peri_reset.reset
		.peri_clock_clk            (peri_clock_clk)             //   input,  width = 1,         peri_clock.clk
	);

endmodule
