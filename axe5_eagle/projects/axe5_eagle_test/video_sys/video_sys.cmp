	component video_sys is
		port (
			hdmi_h_clk                       : out std_logic;                                        -- h_clk
			hdmi_h16_hsync                   : out std_logic;                                        -- h16_hsync
			hdmi_h16_vsync                   : out std_logic;                                        -- h16_vsync
			hdmi_h16_data_e                  : out std_logic;                                        -- h16_data_e
			hdmi_h16_data                    : out std_logic_vector(15 downto 0);                    -- h16_data
			hdmi_h16_es_data                 : out std_logic_vector(15 downto 0);                    -- h16_es_data
			hdmi_h24_hsync                   : out std_logic;                                        -- h24_hsync
			hdmi_h24_vsync                   : out std_logic;                                        -- h24_vsync
			hdmi_h24_data_e                  : out std_logic;                                        -- h24_data_e
			hdmi_h24_data                    : out std_logic_vector(23 downto 0);                    -- h24_data
			hdmi_h36_hsync                   : out std_logic;                                        -- h36_hsync
			hdmi_h36_vsync                   : out std_logic;                                        -- h36_vsync
			hdmi_h36_data_e                  : out std_logic;                                        -- h36_data_e
			hdmi_h36_data                    : out std_logic_vector(35 downto 0);                    -- h36_data
			clk_clk                          : in  std_logic                     := 'X';             -- clk
			hdmi_dmac_irq                    : out std_logic;                                        -- irq
			hdmi_dmac_master_awvalid         : out std_logic;                                        -- awvalid
			hdmi_dmac_master_awaddr          : out std_logic_vector(31 downto 0);                    -- awaddr
			hdmi_dmac_master_awready         : in  std_logic                     := 'X';             -- awready
			hdmi_dmac_master_wvalid          : out std_logic;                                        -- wvalid
			hdmi_dmac_master_wdata           : out std_logic_vector(63 downto 0);                    -- wdata
			hdmi_dmac_master_wstrb           : out std_logic_vector(7 downto 0);                     -- wstrb
			hdmi_dmac_master_wready          : in  std_logic                     := 'X';             -- wready
			hdmi_dmac_master_bvalid          : in  std_logic                     := 'X';             -- bvalid
			hdmi_dmac_master_bresp           : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- bresp
			hdmi_dmac_master_bready          : out std_logic;                                        -- bready
			hdmi_dmac_master_arvalid         : out std_logic;                                        -- arvalid
			hdmi_dmac_master_araddr          : out std_logic_vector(31 downto 0);                    -- araddr
			hdmi_dmac_master_arready         : in  std_logic                     := 'X';             -- arready
			hdmi_dmac_master_rvalid          : in  std_logic                     := 'X';             -- rvalid
			hdmi_dmac_master_rresp           : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rresp
			hdmi_dmac_master_rdata           : in  std_logic_vector(63 downto 0) := (others => 'X'); -- rdata
			hdmi_dmac_master_rready          : out std_logic;                                        -- rready
			hdmi_dmac_master_awlen           : out std_logic_vector(3 downto 0);                     -- awlen
			hdmi_dmac_master_awsize          : out std_logic_vector(2 downto 0);                     -- awsize
			hdmi_dmac_master_awburst         : out std_logic_vector(1 downto 0);                     -- awburst
			hdmi_dmac_master_awcache         : out std_logic_vector(3 downto 0);                     -- awcache
			hdmi_dmac_master_awprot          : out std_logic_vector(2 downto 0);                     -- awprot
			hdmi_dmac_master_wlast           : out std_logic;                                        -- wlast
			hdmi_dmac_master_arlen           : out std_logic_vector(3 downto 0);                     -- arlen
			hdmi_dmac_master_arsize          : out std_logic_vector(2 downto 0);                     -- arsize
			hdmi_dmac_master_arburst         : out std_logic_vector(1 downto 0);                     -- arburst
			hdmi_dmac_master_arcache         : out std_logic_vector(3 downto 0);                     -- arcache
			hdmi_dmac_master_arprot          : out std_logic_vector(2 downto 0);                     -- arprot
			hdmi_dmac_master_awid            : out std_logic;                                        -- awid
			hdmi_dmac_master_awlock          : out std_logic_vector(1 downto 0);                     -- awlock
			hdmi_dmac_master_wid             : out std_logic;                                        -- wid
			hdmi_dmac_master_arid            : out std_logic;                                        -- arid
			hdmi_dmac_master_arlock          : out std_logic_vector(1 downto 0);                     -- arlock
			hdmi_dmac_master_rid             : in  std_logic                     := 'X';             -- rid
			hdmi_dmac_master_bid             : in  std_logic                     := 'X';             -- bid
			hdmi_dmac_master_rlast           : in  std_logic                     := 'X';             -- rlast
			hdmi_pll_refclk_clk              : in  std_logic                     := 'X';             -- clk
			mm_video_bridge_s0_waitrequest   : out std_logic;                                        -- waitrequest
			mm_video_bridge_s0_readdata      : out std_logic_vector(31 downto 0);                    -- readdata
			mm_video_bridge_s0_readdatavalid : out std_logic;                                        -- readdatavalid
			mm_video_bridge_s0_burstcount    : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- burstcount
			mm_video_bridge_s0_writedata     : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			mm_video_bridge_s0_address       : in  std_logic_vector(23 downto 0) := (others => 'X'); -- address
			mm_video_bridge_s0_write         : in  std_logic                     := 'X';             -- write
			mm_video_bridge_s0_read          : in  std_logic                     := 'X';             -- read
			mm_video_bridge_s0_byteenable    : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			mm_video_bridge_s0_debugaccess   : in  std_logic                     := 'X';             -- debugaccess
			reset_reset                      : in  std_logic                     := 'X'              -- reset
		);
	end component video_sys;

