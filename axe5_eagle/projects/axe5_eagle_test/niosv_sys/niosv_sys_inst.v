	niosv_sys u0 (
		.axi_bridge_m0_awid    (_connected_to_axi_bridge_m0_awid_),    //  output,   width = 5, axi_bridge_m0.awid
		.axi_bridge_m0_awaddr  (_connected_to_axi_bridge_m0_awaddr_),  //  output,  width = 31,              .awaddr
		.axi_bridge_m0_awlen   (_connected_to_axi_bridge_m0_awlen_),   //  output,   width = 8,              .awlen
		.axi_bridge_m0_awsize  (_connected_to_axi_bridge_m0_awsize_),  //  output,   width = 3,              .awsize
		.axi_bridge_m0_awburst (_connected_to_axi_bridge_m0_awburst_), //  output,   width = 2,              .awburst
		.axi_bridge_m0_awlock  (_connected_to_axi_bridge_m0_awlock_),  //  output,   width = 1,              .awlock
		.axi_bridge_m0_awcache (_connected_to_axi_bridge_m0_awcache_), //  output,   width = 4,              .awcache
		.axi_bridge_m0_awprot  (_connected_to_axi_bridge_m0_awprot_),  //  output,   width = 3,              .awprot
		.axi_bridge_m0_awvalid (_connected_to_axi_bridge_m0_awvalid_), //  output,   width = 1,              .awvalid
		.axi_bridge_m0_awready (_connected_to_axi_bridge_m0_awready_), //   input,   width = 1,              .awready
		.axi_bridge_m0_wdata   (_connected_to_axi_bridge_m0_wdata_),   //  output,  width = 32,              .wdata
		.axi_bridge_m0_wstrb   (_connected_to_axi_bridge_m0_wstrb_),   //  output,   width = 4,              .wstrb
		.axi_bridge_m0_wlast   (_connected_to_axi_bridge_m0_wlast_),   //  output,   width = 1,              .wlast
		.axi_bridge_m0_wvalid  (_connected_to_axi_bridge_m0_wvalid_),  //  output,   width = 1,              .wvalid
		.axi_bridge_m0_wready  (_connected_to_axi_bridge_m0_wready_),  //   input,   width = 1,              .wready
		.axi_bridge_m0_bid     (_connected_to_axi_bridge_m0_bid_),     //   input,   width = 5,              .bid
		.axi_bridge_m0_bresp   (_connected_to_axi_bridge_m0_bresp_),   //   input,   width = 2,              .bresp
		.axi_bridge_m0_bvalid  (_connected_to_axi_bridge_m0_bvalid_),  //   input,   width = 1,              .bvalid
		.axi_bridge_m0_bready  (_connected_to_axi_bridge_m0_bready_),  //  output,   width = 1,              .bready
		.axi_bridge_m0_arid    (_connected_to_axi_bridge_m0_arid_),    //  output,   width = 5,              .arid
		.axi_bridge_m0_araddr  (_connected_to_axi_bridge_m0_araddr_),  //  output,  width = 31,              .araddr
		.axi_bridge_m0_arlen   (_connected_to_axi_bridge_m0_arlen_),   //  output,   width = 8,              .arlen
		.axi_bridge_m0_arsize  (_connected_to_axi_bridge_m0_arsize_),  //  output,   width = 3,              .arsize
		.axi_bridge_m0_arburst (_connected_to_axi_bridge_m0_arburst_), //  output,   width = 2,              .arburst
		.axi_bridge_m0_arlock  (_connected_to_axi_bridge_m0_arlock_),  //  output,   width = 1,              .arlock
		.axi_bridge_m0_arcache (_connected_to_axi_bridge_m0_arcache_), //  output,   width = 4,              .arcache
		.axi_bridge_m0_arprot  (_connected_to_axi_bridge_m0_arprot_),  //  output,   width = 3,              .arprot
		.axi_bridge_m0_arvalid (_connected_to_axi_bridge_m0_arvalid_), //  output,   width = 1,              .arvalid
		.axi_bridge_m0_arready (_connected_to_axi_bridge_m0_arready_), //   input,   width = 1,              .arready
		.axi_bridge_m0_rid     (_connected_to_axi_bridge_m0_rid_),     //   input,   width = 5,              .rid
		.axi_bridge_m0_rdata   (_connected_to_axi_bridge_m0_rdata_),   //   input,  width = 32,              .rdata
		.axi_bridge_m0_rresp   (_connected_to_axi_bridge_m0_rresp_),   //   input,   width = 2,              .rresp
		.axi_bridge_m0_rlast   (_connected_to_axi_bridge_m0_rlast_),   //   input,   width = 1,              .rlast
		.axi_bridge_m0_rvalid  (_connected_to_axi_bridge_m0_rvalid_),  //   input,   width = 1,              .rvalid
		.axi_bridge_m0_rready  (_connected_to_axi_bridge_m0_rready_),  //  output,   width = 1,              .rready
		.clk_100m_clk          (_connected_to_clk_100m_clk_),          //   input,   width = 1,      clk_100m.clk
		.cruvi_ls_0_in_port    (_connected_to_cruvi_ls_0_in_port_),    //   input,   width = 8,    cruvi_ls_0.in_port
		.cruvi_ls_0_out_port   (_connected_to_cruvi_ls_0_out_port_),   //  output,   width = 8,              .out_port
		.cruvi_ls_1_in_port    (_connected_to_cruvi_ls_1_in_port_),    //   input,   width = 8,    cruvi_ls_1.in_port
		.cruvi_ls_1_out_port   (_connected_to_cruvi_ls_1_out_port_),   //  output,   width = 8,              .out_port
		.fpga_dipsw_export     (_connected_to_fpga_dipsw_export_),     //   input,   width = 2,    fpga_dipsw.export
		.fpga_pb_export        (_connected_to_fpga_pb_export_),        //   input,   width = 2,       fpga_pb.export
		.hdmi_i2c_sda_in       (_connected_to_hdmi_i2c_sda_in_),       //   input,   width = 1,      hdmi_i2c.sda_in
		.hdmi_i2c_scl_in       (_connected_to_hdmi_i2c_scl_in_),       //   input,   width = 1,              .scl_in
		.hdmi_i2c_sda_oe       (_connected_to_hdmi_i2c_sda_oe_),       //  output,   width = 1,              .sda_oe
		.hdmi_i2c_scl_oe       (_connected_to_hdmi_i2c_scl_oe_),       //  output,   width = 1,              .scl_oe
		.dbg_uart_RXD          (_connected_to_dbg_uart_RXD_),          //   input,   width = 1,      dbg_uart.RXD
		.dbg_uart_TXD          (_connected_to_dbg_uart_TXD_),          //  output,   width = 1,              .TXD
		.reset_in_reset        (_connected_to_reset_in_reset_),        //   input,   width = 1,      reset_in.reset
		.rgb_led0_export       (_connected_to_rgb_led0_export_),       //  output,   width = 3,      rgb_led0.export
		.rgb_led1_export       (_connected_to_rgb_led1_export_),       //  output,   width = 3,      rgb_led1.export
		.rgb_led2_export       (_connected_to_rgb_led2_export_),       //  output,   width = 3,      rgb_led2.export
		.rgb_led3_export       (_connected_to_rgb_led3_export_)        //  output,   width = 3,      rgb_led3.export
	);

